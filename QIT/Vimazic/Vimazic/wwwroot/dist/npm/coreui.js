(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["dist/npm/coreui"],{

/***/ "../node_modules/@coreui/icons/fonts/CoreUI-Icons-Linear.eot?64h6xh":
/*!**************************************************************************!*\
  !*** ../node_modules/@coreui/icons/fonts/CoreUI-Icons-Linear.eot?64h6xh ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"static/fonts/CoreUI-Icons-Linear.2739506.eot\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL0Bjb3JldWkvaWNvbnMvZm9udHMvQ29yZVVJLUljb25zLUxpbmVhci5lb3Q/MjViMSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUIscUJBQXVCIiwiZmlsZSI6Ii4uL25vZGVfbW9kdWxlcy9AY29yZXVpL2ljb25zL2ZvbnRzL0NvcmVVSS1JY29ucy1MaW5lYXIuZW90PzY0aDZ4aC5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcInN0YXRpYy9mb250cy9Db3JlVUktSWNvbnMtTGluZWFyLjI3Mzk1MDYuZW90XCI7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/@coreui/icons/fonts/CoreUI-Icons-Linear.eot?64h6xh\n");

/***/ }),

/***/ "../node_modules/@coreui/icons/fonts/CoreUI-Icons-Linear.svg?64h6xh":
/*!**************************************************************************!*\
  !*** ../node_modules/@coreui/icons/fonts/CoreUI-Icons-Linear.svg?64h6xh ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"static/img/CoreUI-Icons-Linear.61b20a8.svg\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL0Bjb3JldWkvaWNvbnMvZm9udHMvQ29yZVVJLUljb25zLUxpbmVhci5zdmc/MTJmOCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUIscUJBQXVCIiwiZmlsZSI6Ii4uL25vZGVfbW9kdWxlcy9AY29yZXVpL2ljb25zL2ZvbnRzL0NvcmVVSS1JY29ucy1MaW5lYXIuc3ZnPzY0aDZ4aC5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcInN0YXRpYy9pbWcvQ29yZVVJLUljb25zLUxpbmVhci42MWIyMGE4LnN2Z1wiOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../node_modules/@coreui/icons/fonts/CoreUI-Icons-Linear.svg?64h6xh\n");

/***/ }),

/***/ "../node_modules/@coreui/icons/fonts/CoreUI-Icons-Linear.ttf?64h6xh":
/*!**************************************************************************!*\
  !*** ../node_modules/@coreui/icons/fonts/CoreUI-Icons-Linear.ttf?64h6xh ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"static/fonts/CoreUI-Icons-Linear.7774010.ttf\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL0Bjb3JldWkvaWNvbnMvZm9udHMvQ29yZVVJLUljb25zLUxpbmVhci50dGY/MjBlOCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUIscUJBQXVCIiwiZmlsZSI6Ii4uL25vZGVfbW9kdWxlcy9AY29yZXVpL2ljb25zL2ZvbnRzL0NvcmVVSS1JY29ucy1MaW5lYXIudHRmPzY0aDZ4aC5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcInN0YXRpYy9mb250cy9Db3JlVUktSWNvbnMtTGluZWFyLjc3NzQwMTAudHRmXCI7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/@coreui/icons/fonts/CoreUI-Icons-Linear.ttf?64h6xh\n");

/***/ }),

/***/ "../node_modules/@coreui/icons/fonts/CoreUI-Icons-Linear.woff?64h6xh":
/*!***************************************************************************!*\
  !*** ../node_modules/@coreui/icons/fonts/CoreUI-Icons-Linear.woff?64h6xh ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"static/fonts/CoreUI-Icons-Linear.e1faf5f.woff\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL0Bjb3JldWkvaWNvbnMvZm9udHMvQ29yZVVJLUljb25zLUxpbmVhci53b2ZmP2MyNDgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLHFCQUF1QiIsImZpbGUiOiIuLi9ub2RlX21vZHVsZXMvQGNvcmV1aS9pY29ucy9mb250cy9Db3JlVUktSWNvbnMtTGluZWFyLndvZmY/NjRoNnhoLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwic3RhdGljL2ZvbnRzL0NvcmVVSS1JY29ucy1MaW5lYXIuZTFmYWY1Zi53b2ZmXCI7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/@coreui/icons/fonts/CoreUI-Icons-Linear.woff?64h6xh\n");

/***/ }),

/***/ "../node_modules/@coreui/vue/dist/coreui-vue.esm.js":
/*!**********************************************************!*\
  !*** ../node_modules/@coreui/vue/dist/coreui-vue.esm.js ***!
  \**********************************************************/
/*! exports provided: default, Aside, AsideToggler, Breadcrumb, Callout, Footer, Header, HeaderDropdown, Sidebar, SidebarFooter, SidebarForm, SidebarHeader, SidebarMinimizer, SidebarNav, SidebarNavDivider, SidebarNavItem, SidebarNavDropdown, SidebarNavLabel, SidebarNavLink, SidebarNavTitle, SidebarToggler, Switch */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Aside\", function() { return Aside; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AsideToggler\", function() { return AsideToggler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Breadcrumb\", function() { return Breadcrumb; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Callout\", function() { return Callout; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Footer\", function() { return Footer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Header\", function() { return Header; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HeaderDropdown\", function() { return HeaderDropdown; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Sidebar\", function() { return Sidebar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SidebarFooter\", function() { return SidebarFooter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SidebarForm\", function() { return SidebarForm; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SidebarHeader\", function() { return SidebarHeader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SidebarMinimizer\", function() { return SidebarMinimizer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SidebarNav\", function() { return SidebarNav; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SidebarNavDivider\", function() { return SidebarNavDivider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SidebarNavItem\", function() { return SidebarNavItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SidebarNavDropdown\", function() { return SidebarNavDropdown; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SidebarNavLabel\", function() { return SidebarNavLabel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SidebarNavLink\", function() { return SidebarNavLink; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SidebarNavTitle\", function() { return SidebarNavTitle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SidebarToggler\", function() { return SidebarToggler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Switch\", function() { return Switch; });\n/* harmony import */ var vue_perfect_scrollbar__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue-perfect-scrollbar */ \"../node_modules/vue-perfect-scrollbar/dist/index.js\");\n/* harmony import */ var vue_perfect_scrollbar__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vue_perfect_scrollbar__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction unwrapExports (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar _core = createCommonjsModule(function (module) {\nvar core = module.exports = { version: '2.5.6' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n});\nvar _core_1 = _core.version;\n\nvar $JSON = _core.JSON || (_core.JSON = { stringify: JSON.stringify });\nvar stringify = function stringify(it) { // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n\nvar stringify$1 = createCommonjsModule(function (module) {\nmodule.exports = { \"default\": stringify, __esModule: true };\n});\n\nunwrapExports(stringify$1);\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nvar script = {\n  props: {\n    list: {\n      type: Array,\n      required: true,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  methods: {\n    isLast: function isLast(index) {\n      return index === this.list.length - 1;\n    },\n    showName: function showName(item) {\n      if (item.meta && item.meta.label) {\n        item = item.meta && item.meta.label;\n      }\n      if (item.name) {\n        item = item.name;\n      }\n      return item;\n    }\n  }\n};\n\nvar __vue_script__ = script;\n\n/* template */\nvar __vue_render__ = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"ol\", { staticClass: \"breadcrumb\" }, _vm._l(_vm.list, function (item, index) {\n    return _c(\"li\", { key: index, staticClass: \"breadcrumb-item\" }, [_vm.isLast(index) ? _c(\"span\", { staticClass: \"active\" }, [_vm._v(_vm._s(_vm.showName(item)))]) : _c(\"router-link\", { attrs: { to: item } }, [_vm._v(_vm._s(_vm.showName(item)))])], 1);\n  }));\n};\nvar __vue_staticRenderFns__ = [];\n__vue_render__._withStripped = true;\n\nvar __vue_template__ = typeof __vue_render__ !== 'undefined' ? { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ } : {};\n/* style */\nvar __vue_inject_styles__ = undefined;\n/* scoped */\nvar __vue_scope_id__ = undefined;\n/* module identifier */\nvar __vue_module_identifier__ = undefined;\n/* functional template */\nvar __vue_is_functional_template__ = false;\n/* component normalizer */\nfunction __vue_normalize__(template, style, script$$1, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = script$$1 || {};\n\n  {\n    component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Breadcrumb\\\\Breadcrumb.vue\";\n  }\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\nfunction __vue_create_injector__() {\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var styles = __vue_create_injector__.styles || (__vue_create_injector__.styles = {});\n  var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase());\n\n  return function addStyle(id, css) {\n    if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return; // SSR styles are present.\n\n    var group = isOldIE ? css.media || 'default' : id;\n    var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });\n\n    if (!style.ids.includes(id)) {\n      var code = css.source;\n      var index = style.ids.length;\n\n      style.ids.push(id);\n\n      if (isOldIE) {\n        style.element = style.element || document.querySelector('style[data-group=' + group + ']');\n      }\n\n      if (!style.element) {\n        var el = style.element = document.createElement('style');\n        el.type = 'text/css';\n\n        if (css.media) el.setAttribute('media', css.media);\n        if (isOldIE) {\n          el.setAttribute('data-group', group);\n          el.setAttribute('data-next-index', '0');\n        }\n\n        head.appendChild(el);\n      }\n\n      if (isOldIE) {\n        index = parseInt(style.element.getAttribute('data-next-index'));\n        style.element.setAttribute('data-next-index', index + 1);\n      }\n\n      if (style.element.styleSheet) {\n        style.parts.push(code);\n        style.element.styleSheet.cssText = style.parts.filter(Boolean).join('\\n');\n      } else {\n        var textNode = document.createTextNode(code);\n        var nodes = style.element.childNodes;\n        if (nodes[index]) style.element.removeChild(nodes[index]);\n        if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);\n      }\n    }\n  };\n}\n/* style inject SSR */\n\nvar Breadcrumb = __vue_normalize__(__vue_template__, __vue_inject_styles__, typeof __vue_script__ === 'undefined' ? {} : __vue_script__, __vue_scope_id__, __vue_is_functional_template__, __vue_module_identifier__, typeof __vue_create_injector__ !== 'undefined' ? __vue_create_injector__ : function () {}, typeof __vue_create_injector_ssr__ !== 'undefined' ? __vue_create_injector_ssr__ : function () {});\n\n//\n//\n//\n//\n//\n//\n\nvar script$1 = {\n  props: {\n    variant: {\n      type: String,\n      default: ''\n    }\n  },\n  computed: {\n    classList: function classList() {\n      return ['callout', this.calloutVariant];\n    },\n    calloutVariant: function calloutVariant() {\n      return this.variant ? 'callout-' + this.variant : '';\n    }\n  }\n};\n\nvar __vue_script__$1 = script$1;\n\n/* template */\nvar __vue_render__$1 = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"div\", { class: _vm.classList }, [_vm._t(\"default\", [_vm._v(\"Callout\")])], 2);\n};\nvar __vue_staticRenderFns__$1 = [];\n__vue_render__$1._withStripped = true;\n\nvar __vue_template__$1 = typeof __vue_render__$1 !== 'undefined' ? { render: __vue_render__$1, staticRenderFns: __vue_staticRenderFns__$1 } : {};\n/* style */\nvar __vue_inject_styles__$1 = undefined;\n/* scoped */\nvar __vue_scope_id__$1 = undefined;\n/* module identifier */\nvar __vue_module_identifier__$1 = undefined;\n/* functional template */\nvar __vue_is_functional_template__$1 = false;\n/* component normalizer */\nfunction __vue_normalize__$1(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = script || {};\n\n  {\n    component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Callout\\\\Callout.vue\";\n  }\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\nfunction __vue_create_injector__$1() {\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var styles = __vue_create_injector__$1.styles || (__vue_create_injector__$1.styles = {});\n  var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase());\n\n  return function addStyle(id, css) {\n    if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return; // SSR styles are present.\n\n    var group = isOldIE ? css.media || 'default' : id;\n    var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });\n\n    if (!style.ids.includes(id)) {\n      var code = css.source;\n      var index = style.ids.length;\n\n      style.ids.push(id);\n\n      if (isOldIE) {\n        style.element = style.element || document.querySelector('style[data-group=' + group + ']');\n      }\n\n      if (!style.element) {\n        var el = style.element = document.createElement('style');\n        el.type = 'text/css';\n\n        if (css.media) el.setAttribute('media', css.media);\n        if (isOldIE) {\n          el.setAttribute('data-group', group);\n          el.setAttribute('data-next-index', '0');\n        }\n\n        head.appendChild(el);\n      }\n\n      if (isOldIE) {\n        index = parseInt(style.element.getAttribute('data-next-index'));\n        style.element.setAttribute('data-next-index', index + 1);\n      }\n\n      if (style.element.styleSheet) {\n        style.parts.push(code);\n        style.element.styleSheet.cssText = style.parts.filter(Boolean).join('\\n');\n      } else {\n        var textNode = document.createTextNode(code);\n        var nodes = style.element.childNodes;\n        if (nodes[index]) style.element.removeChild(nodes[index]);\n        if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);\n      }\n    }\n  };\n}\n/* style inject SSR */\n\nvar Callout = __vue_normalize__$1(__vue_template__$1, __vue_inject_styles__$1, typeof __vue_script__$1 === 'undefined' ? {} : __vue_script__$1, __vue_scope_id__$1, __vue_is_functional_template__$1, __vue_module_identifier__$1, typeof __vue_create_injector__$1 !== 'undefined' ? __vue_create_injector__$1 : function () {}, typeof __vue_create_injector_ssr__ !== 'undefined' ? __vue_create_injector_ssr__ : function () {});\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nvar script$2 = {\n  name: 'AppFooter',\n  props: {\n    fixed: {\n      type: Boolean,\n      default: false\n    }\n  },\n  mounted: function mounted() {\n    this.isFixed();\n  },\n  computed: {\n    classList: function classList() {\n      return ['app-footer'];\n    }\n  },\n  methods: {\n    isFixed: function isFixed() {\n      this.fixed ? document.body.classList.add('footer-fixed') : document.body.classList.remove('footer-fixed');\n    }\n  }\n};\n\nvar __vue_script__$2 = script$2;\n\n/* template */\nvar __vue_render__$2 = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"footer\", { class: _vm.classList }, [_vm._t(\"default\", [_vm._m(0), _vm._v(\" \"), _vm._m(1)])], 2);\n};\nvar __vue_staticRenderFns__$2 = [function () {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"div\", [_c(\"a\", { attrs: { href: \"https://coreui.io\" } }, [_vm._v(\"CoreUI\")]), _vm._v(\" \"), _c(\"span\", [_vm._v(\"© 2018 creativeLabs.\")])]);\n}, function () {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"div\", { staticClass: \"ml-auto\" }, [_c(\"span\", [_vm._v(\"Powered by\")]), _vm._v(\" \"), _c(\"a\", { attrs: { href: \"https://coreui.io\" } }, [_vm._v(\"CoreUI for Vue\")])]);\n}];\n__vue_render__$2._withStripped = true;\n\nvar __vue_template__$2 = typeof __vue_render__$2 !== 'undefined' ? { render: __vue_render__$2, staticRenderFns: __vue_staticRenderFns__$2 } : {};\n/* style */\nvar __vue_inject_styles__$2 = undefined;\n/* scoped */\nvar __vue_scope_id__$2 = undefined;\n/* module identifier */\nvar __vue_module_identifier__$2 = undefined;\n/* functional template */\nvar __vue_is_functional_template__$2 = false;\n/* component normalizer */\nfunction __vue_normalize__$2(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = script || {};\n\n  {\n    component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Footer\\\\Footer.vue\";\n  }\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\nfunction __vue_create_injector__$2() {\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var styles = __vue_create_injector__$2.styles || (__vue_create_injector__$2.styles = {});\n  var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase());\n\n  return function addStyle(id, css) {\n    if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return; // SSR styles are present.\n\n    var group = isOldIE ? css.media || 'default' : id;\n    var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });\n\n    if (!style.ids.includes(id)) {\n      var code = css.source;\n      var index = style.ids.length;\n\n      style.ids.push(id);\n\n      if (isOldIE) {\n        style.element = style.element || document.querySelector('style[data-group=' + group + ']');\n      }\n\n      if (!style.element) {\n        var el = style.element = document.createElement('style');\n        el.type = 'text/css';\n\n        if (css.media) el.setAttribute('media', css.media);\n        if (isOldIE) {\n          el.setAttribute('data-group', group);\n          el.setAttribute('data-next-index', '0');\n        }\n\n        head.appendChild(el);\n      }\n\n      if (isOldIE) {\n        index = parseInt(style.element.getAttribute('data-next-index'));\n        style.element.setAttribute('data-next-index', index + 1);\n      }\n\n      if (style.element.styleSheet) {\n        style.parts.push(code);\n        style.element.styleSheet.cssText = style.parts.filter(Boolean).join('\\n');\n      } else {\n        var textNode = document.createTextNode(code);\n        var nodes = style.element.childNodes;\n        if (nodes[index]) style.element.removeChild(nodes[index]);\n        if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);\n      }\n    }\n  };\n}\n/* style inject SSR */\n\nvar Footer = __vue_normalize__$2(__vue_template__$2, __vue_inject_styles__$2, typeof __vue_script__$2 === 'undefined' ? {} : __vue_script__$2, __vue_scope_id__$2, __vue_is_functional_template__$2, __vue_module_identifier__$2, typeof __vue_create_injector__$2 !== 'undefined' ? __vue_create_injector__$2 : function () {}, typeof __vue_create_injector_ssr__ !== 'undefined' ? __vue_create_injector_ssr__ : function () {});\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nvar script$3 = {\n  model: {\n    prop: 'modelChecked',\n    event: 'change'\n  },\n  data: function data() {\n    return {\n      checkedData: this.isChecked ? this.value : this.uncheckedValue\n    };\n  },\n  props: {\n    id: {\n      type: String,\n      default: function _default() {\n        return 'switch-id-' + this._uid;\n      }\n    },\n    color: {\n      type: String,\n      default: 'secondary'\n    },\n    label: {\n      type: Boolean,\n      default: null\n    },\n    outline: {\n      type: [Boolean, String],\n      default: null,\n      validator: function validator(value) {\n        return [false, true, '', 'alt'].indexOf(value) !== -1;\n      }\n    },\n    size: {\n      type: String,\n      default: null,\n      validator: function validator(value) {\n        return ['', 'lg', 'sm'].indexOf(value) !== -1;\n      }\n    },\n    checked: {\n      type: Boolean,\n      default: false\n    },\n    defaultChecked: {\n      type: Boolean,\n      default: false\n    },\n    modelChecked: {\n      default: undefined\n    },\n    value: {\n      default: true\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    name: {\n      type: String,\n      default: null\n    },\n    required: {\n      type: Boolean,\n      default: false\n    },\n    onChange: {\n      type: Function\n    },\n    uncheckedValue: {\n      default: false\n    },\n    variant: {\n      type: String,\n      default: null,\n      validator: function validator(value) {\n        return [null, '3d', 'pill'].indexOf(value) !== -1;\n      }\n    },\n    dataOn: {\n      type: String,\n      default: 'On'\n    },\n    dataOff: {\n      type: String,\n      default: 'Off'\n    }\n  },\n  computed: {\n    classList: function classList() {\n      return ['switch', this.label ? 'switch-label' : '', this.size ? 'switch-' + this.size : '', this.variant ? 'switch-' + this.variant : '', 'switch' + (this.outline ? '-outline' : '') + '-' + this.color + (this.outline === 'alt' ? '-alt' : ''), 'form-check-label'];\n    },\n    isChecked: function isChecked() {\n      if (this.modelChecked === undefined) {\n        return this.checkedData === this.value;\n      }\n      return this.modelChecked === this.value;\n    }\n  },\n  methods: {\n    handleChange: function handleChange(event) {\n      this.toggle(event.target.checked);\n    },\n    toggle: function toggle(checked) {\n      this.checkedData = checked ? this.value : this.uncheckedValue;\n      this.$emit('change', this.checkedData);\n    }\n  },\n  mounted: function mounted() {\n    this.toggle(this.defaultChecked || this.checked || this.isChecked);\n  }\n};\n\nvar __vue_script__$3 = script$3;\n\n/* template */\nvar __vue_render__$3 = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"label\", { class: _vm.classList }, [_c(\"input\", {\n    staticClass: \"switch-input form-check-input\",\n    attrs: {\n      id: _vm.id,\n      disabled: _vm.disabled,\n      required: _vm.required,\n      name: _vm.name,\n      type: \"checkbox\",\n      \"true-value\": \"value\",\n      \"false-value\": \"uncheckedValue\"\n    },\n    domProps: { checked: _vm.isChecked, value: _vm.value },\n    on: { change: _vm.handleChange }\n  }), _vm._v(\" \"), _vm.label ? [_c(\"span\", {\n    staticClass: \"switch-slider\",\n    attrs: {\n      \"data-checked\": _vm.dataOn,\n      \"data-unchecked\": _vm.dataOff\n    }\n  })] : [_c(\"span\", { staticClass: \"switch-slider\" })]], 2);\n};\nvar __vue_staticRenderFns__$3 = [];\n__vue_render__$3._withStripped = true;\n\nvar __vue_template__$3 = typeof __vue_render__$3 !== 'undefined' ? { render: __vue_render__$3, staticRenderFns: __vue_staticRenderFns__$3 } : {};\n/* style */\nvar __vue_inject_styles__$3 = undefined;\n/* scoped */\nvar __vue_scope_id__$3 = undefined;\n/* module identifier */\nvar __vue_module_identifier__$3 = undefined;\n/* functional template */\nvar __vue_is_functional_template__$3 = false;\n/* component normalizer */\nfunction __vue_normalize__$3(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = script || {};\n\n  {\n    component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Switch\\\\Switch.vue\";\n  }\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\nfunction __vue_create_injector__$3() {\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var styles = __vue_create_injector__$3.styles || (__vue_create_injector__$3.styles = {});\n  var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase());\n\n  return function addStyle(id, css) {\n    if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return; // SSR styles are present.\n\n    var group = isOldIE ? css.media || 'default' : id;\n    var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });\n\n    if (!style.ids.includes(id)) {\n      var code = css.source;\n      var index = style.ids.length;\n\n      style.ids.push(id);\n\n      if (isOldIE) {\n        style.element = style.element || document.querySelector('style[data-group=' + group + ']');\n      }\n\n      if (!style.element) {\n        var el = style.element = document.createElement('style');\n        el.type = 'text/css';\n\n        if (css.media) el.setAttribute('media', css.media);\n        if (isOldIE) {\n          el.setAttribute('data-group', group);\n          el.setAttribute('data-next-index', '0');\n        }\n\n        head.appendChild(el);\n      }\n\n      if (isOldIE) {\n        index = parseInt(style.element.getAttribute('data-next-index'));\n        style.element.setAttribute('data-next-index', index + 1);\n      }\n\n      if (style.element.styleSheet) {\n        style.parts.push(code);\n        style.element.styleSheet.cssText = style.parts.filter(Boolean).join('\\n');\n      } else {\n        var textNode = document.createTextNode(code);\n        var nodes = style.element.childNodes;\n        if (nodes[index]) style.element.removeChild(nodes[index]);\n        if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);\n      }\n    }\n  };\n}\n/* style inject SSR */\n\nvar Switch = __vue_normalize__$3(__vue_template__$3, __vue_inject_styles__$3, typeof __vue_script__$3 === 'undefined' ? {} : __vue_script__$3, __vue_scope_id__$3, __vue_is_functional_template__$3, __vue_module_identifier__$3, typeof __vue_create_injector__$3 !== 'undefined' ? __vue_create_injector__$3 : function () {}, typeof __vue_create_injector_ssr__ !== 'undefined' ? __vue_create_injector_ssr__ : function () {});\n\n//\n//\n//\n//\n//\n//\n\n// import { asideMenuCssClasses, validBreakpoints, checkBreakpoint } from '../../shared/classes'\n\nvar script$4 = {\n  name: 'AppAside',\n  props: {\n    fixed: {\n      type: Boolean,\n      default: false\n    },\n    display: {\n      type: String,\n      default: ''\n    },\n    offCanvas: {\n      type: Boolean,\n      default: true\n    }\n  },\n  mounted: function mounted() {\n    this.isFixed(this.fixed);\n    this.isOffCanvas(this.offCanvas);\n    // this.displayBreakpoint(this.display)\n  },\n  methods: {\n    isFixed: function isFixed(fixed) {\n      fixed ? document.body.classList.add('aside-menu-fixed') : document.body.classList.remove('aside-menu-fixed');\n      return fixed;\n    },\n    isOffCanvas: function isOffCanvas(offCanvas) {\n      offCanvas ? document.body.classList.add('aside-menu-off-canvas') : document.body.classList.remove('aside-menu-off-canvas');\n    }\n    // displayBreakpoint (display) {\n    //   let cssClass = asideMenuCssClasses[0]\n    //   if (display && checkBreakpoint(display, validBreakpoints)) {\n    //     cssClass = `aside-menu-${display}-show`\n    //   }\n    //   document.body.classList.add(cssClass)\n    // }\n\n  }\n};\n\nvar __vue_script__$4 = script$4;\n\n/* template */\nvar __vue_render__$4 = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"aside\", { staticClass: \"aside-menu\" }, [_vm._t(\"default\", [_vm._v(\"Aside\")])], 2);\n};\nvar __vue_staticRenderFns__$4 = [];\n__vue_render__$4._withStripped = true;\n\nvar __vue_template__$4 = typeof __vue_render__$4 !== 'undefined' ? { render: __vue_render__$4, staticRenderFns: __vue_staticRenderFns__$4 } : {};\n/* style */\nvar __vue_inject_styles__$4 = undefined;\n/* scoped */\nvar __vue_scope_id__$4 = undefined;\n/* module identifier */\nvar __vue_module_identifier__$4 = undefined;\n/* functional template */\nvar __vue_is_functional_template__$4 = false;\n/* component normalizer */\nfunction __vue_normalize__$4(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = script || {};\n\n  {\n    component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Aside\\\\Aside.vue\";\n  }\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\nfunction __vue_create_injector__$4() {\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var styles = __vue_create_injector__$4.styles || (__vue_create_injector__$4.styles = {});\n  var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase());\n\n  return function addStyle(id, css) {\n    if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return; // SSR styles are present.\n\n    var group = isOldIE ? css.media || 'default' : id;\n    var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });\n\n    if (!style.ids.includes(id)) {\n      var code = css.source;\n      var index = style.ids.length;\n\n      style.ids.push(id);\n\n      if (isOldIE) {\n        style.element = style.element || document.querySelector('style[data-group=' + group + ']');\n      }\n\n      if (!style.element) {\n        var el = style.element = document.createElement('style');\n        el.type = 'text/css';\n\n        if (css.media) el.setAttribute('media', css.media);\n        if (isOldIE) {\n          el.setAttribute('data-group', group);\n          el.setAttribute('data-next-index', '0');\n        }\n\n        head.appendChild(el);\n      }\n\n      if (isOldIE) {\n        index = parseInt(style.element.getAttribute('data-next-index'));\n        style.element.setAttribute('data-next-index', index + 1);\n      }\n\n      if (style.element.styleSheet) {\n        style.parts.push(code);\n        style.element.styleSheet.cssText = style.parts.filter(Boolean).join('\\n');\n      } else {\n        var textNode = document.createTextNode(code);\n        var nodes = style.element.childNodes;\n        if (nodes[index]) style.element.removeChild(nodes[index]);\n        if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);\n      }\n    }\n  };\n}\n/* style inject SSR */\n\nvar Aside = __vue_normalize__$4(__vue_template__$4, __vue_inject_styles__$4, typeof __vue_script__$4 === 'undefined' ? {} : __vue_script__$4, __vue_scope_id__$4, __vue_is_functional_template__$4, __vue_module_identifier__$4, typeof __vue_create_injector__$4 !== 'undefined' ? __vue_create_injector__$4 : function () {}, typeof __vue_create_injector_ssr__ !== 'undefined' ? __vue_create_injector_ssr__ : function () {});\n\nvar sidebarCssClasses = ['sidebar-show', 'sidebar-sm-show', 'sidebar-md-show', 'sidebar-lg-show', 'sidebar-xl-show'];\n\nvar asideMenuCssClasses = ['aside-menu-show', 'aside-menu-sm-show', 'aside-menu-md-show', 'aside-menu-lg-show', 'aside-menu-xl-show'];\n\nvar validBreakpoints = ['sm', 'md', 'lg', 'xl'];\n\nfunction checkBreakpoint(breakpoint, list) {\n  return list.indexOf(breakpoint) > -1;\n}\n\nfunction toggleClasses(toggleClass, classList) {\n  var level = classList.indexOf(toggleClass);\n  var removeClassList = classList.slice(0, level);\n  removeClassList.map(function (className) {\n    return document.body.classList.remove(className);\n  });\n  document.body.classList.toggle(toggleClass);\n}\n\n//\n\nvar script$5 = {\n  name: 'AsideToggler',\n  props: {\n    mobile: {\n      type: Boolean,\n      default: false\n    },\n    display: {\n      type: String,\n      default: ''\n    }\n  },\n  computed: {\n    classList: function classList() {\n      return ['navbar-toggler'\n      // 'd-none',\n      // 'd-lg-inline-block'\n      ];\n    }\n  },\n  mounted: function mounted() {\n    // this.toggle()\n  },\n  methods: {\n    toggle: function toggle() {\n      var _ref = [this.display, this.mobile],\n          display = _ref[0],\n          mobile = _ref[1];\n\n      var cssClass = asideMenuCssClasses[0];\n      if (!mobile && display && checkBreakpoint(display, validBreakpoints)) {\n        cssClass = 'aside-menu-' + display + '-show';\n      }\n      toggleClasses(cssClass, asideMenuCssClasses);\n    },\n    asideToggle: function asideToggle(e) {\n      e.preventDefault();\n      this.toggle();\n    }\n  }\n};\n\nvar __vue_script__$5 = script$5;\n\n/* template */\nvar __vue_render__$5 = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"button\", {\n    class: _vm.classList,\n    attrs: { display: _vm.display, mobile: _vm.mobile, type: \"button\" },\n    on: { click: _vm.asideToggle }\n  }, [_c(\"span\", { staticClass: \"navbar-toggler-icon\" })]);\n};\nvar __vue_staticRenderFns__$5 = [];\n__vue_render__$5._withStripped = true;\n\nvar __vue_template__$5 = typeof __vue_render__$5 !== 'undefined' ? { render: __vue_render__$5, staticRenderFns: __vue_staticRenderFns__$5 } : {};\n/* style */\nvar __vue_inject_styles__$5 = undefined;\n/* scoped */\nvar __vue_scope_id__$5 = undefined;\n/* module identifier */\nvar __vue_module_identifier__$5 = undefined;\n/* functional template */\nvar __vue_is_functional_template__$5 = false;\n/* component normalizer */\nfunction __vue_normalize__$5(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = script || {};\n\n  {\n    component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Aside\\\\AsideToggler.vue\";\n  }\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\nfunction __vue_create_injector__$5() {\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var styles = __vue_create_injector__$5.styles || (__vue_create_injector__$5.styles = {});\n  var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase());\n\n  return function addStyle(id, css) {\n    if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return; // SSR styles are present.\n\n    var group = isOldIE ? css.media || 'default' : id;\n    var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });\n\n    if (!style.ids.includes(id)) {\n      var code = css.source;\n      var index = style.ids.length;\n\n      style.ids.push(id);\n\n      if (isOldIE) {\n        style.element = style.element || document.querySelector('style[data-group=' + group + ']');\n      }\n\n      if (!style.element) {\n        var el = style.element = document.createElement('style');\n        el.type = 'text/css';\n\n        if (css.media) el.setAttribute('media', css.media);\n        if (isOldIE) {\n          el.setAttribute('data-group', group);\n          el.setAttribute('data-next-index', '0');\n        }\n\n        head.appendChild(el);\n      }\n\n      if (isOldIE) {\n        index = parseInt(style.element.getAttribute('data-next-index'));\n        style.element.setAttribute('data-next-index', index + 1);\n      }\n\n      if (style.element.styleSheet) {\n        style.parts.push(code);\n        style.element.styleSheet.cssText = style.parts.filter(Boolean).join('\\n');\n      } else {\n        var textNode = document.createTextNode(code);\n        var nodes = style.element.childNodes;\n        if (nodes[index]) style.element.removeChild(nodes[index]);\n        if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);\n      }\n    }\n  };\n}\n/* style inject SSR */\n\nvar AsideToggler = __vue_normalize__$5(__vue_template__$5, __vue_inject_styles__$5, typeof __vue_script__$5 === 'undefined' ? {} : __vue_script__$5, __vue_scope_id__$5, __vue_is_functional_template__$5, __vue_module_identifier__$5, typeof __vue_create_injector__$5 !== 'undefined' ? __vue_create_injector__$5 : function () {}, typeof __vue_create_injector_ssr__ !== 'undefined' ? __vue_create_injector_ssr__ : function () {});\n\n//\n//\n//\n//\n//\n//\n//\n\nvar script$6 = {\n  name: 'AppHeader',\n  props: {\n    fixed: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    classList: function classList() {\n      return ['app-header', 'navbar'];\n    }\n  },\n  mounted: function mounted() {\n    this.isFixed(this.fixed);\n  },\n  methods: {\n    isFixed: function isFixed(fixed) {\n      fixed ? document.body.classList.add('header-fixed') : document.body.classList.remove('header-fixed');\n      return fixed;\n    }\n  }\n};\n\nvar __vue_script__$6 = script$6;\n\n/* template */\nvar __vue_render__$6 = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"header\", { class: _vm.classList }, [_vm._t(\"default\", [_vm._v(\"Header\")])], 2);\n};\nvar __vue_staticRenderFns__$6 = [];\n__vue_render__$6._withStripped = true;\n\nvar __vue_template__$6 = typeof __vue_render__$6 !== 'undefined' ? { render: __vue_render__$6, staticRenderFns: __vue_staticRenderFns__$6 } : {};\n/* style */\nvar __vue_inject_styles__$6 = undefined;\n/* scoped */\nvar __vue_scope_id__$6 = undefined;\n/* module identifier */\nvar __vue_module_identifier__$6 = undefined;\n/* functional template */\nvar __vue_is_functional_template__$6 = false;\n/* component normalizer */\nfunction __vue_normalize__$6(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = script || {};\n\n  {\n    component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Header\\\\Header.vue\";\n  }\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\nfunction __vue_create_injector__$6() {\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var styles = __vue_create_injector__$6.styles || (__vue_create_injector__$6.styles = {});\n  var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase());\n\n  return function addStyle(id, css) {\n    if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return; // SSR styles are present.\n\n    var group = isOldIE ? css.media || 'default' : id;\n    var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });\n\n    if (!style.ids.includes(id)) {\n      var code = css.source;\n      var index = style.ids.length;\n\n      style.ids.push(id);\n\n      if (isOldIE) {\n        style.element = style.element || document.querySelector('style[data-group=' + group + ']');\n      }\n\n      if (!style.element) {\n        var el = style.element = document.createElement('style');\n        el.type = 'text/css';\n\n        if (css.media) el.setAttribute('media', css.media);\n        if (isOldIE) {\n          el.setAttribute('data-group', group);\n          el.setAttribute('data-next-index', '0');\n        }\n\n        head.appendChild(el);\n      }\n\n      if (isOldIE) {\n        index = parseInt(style.element.getAttribute('data-next-index'));\n        style.element.setAttribute('data-next-index', index + 1);\n      }\n\n      if (style.element.styleSheet) {\n        style.parts.push(code);\n        style.element.styleSheet.cssText = style.parts.filter(Boolean).join('\\n');\n      } else {\n        var textNode = document.createTextNode(code);\n        var nodes = style.element.childNodes;\n        if (nodes[index]) style.element.removeChild(nodes[index]);\n        if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);\n      }\n    }\n  };\n}\n/* style inject SSR */\n\nvar Header = __vue_normalize__$6(__vue_template__$6, __vue_inject_styles__$6, typeof __vue_script__$6 === 'undefined' ? {} : __vue_script__$6, __vue_scope_id__$6, __vue_is_functional_template__$6, __vue_module_identifier__$6, typeof __vue_create_injector__$6 !== 'undefined' ? __vue_create_injector__$6 : function () {}, typeof __vue_create_injector_ssr__ !== 'undefined' ? __vue_create_injector_ssr__ : function () {});\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nvar script$7 = {\n  name: 'HeaderDropdown',\n  props: {\n    right: {\n      type: Boolean,\n      default: false\n    },\n    noCaret: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return { itemsCount: 42 };\n  }\n};\n\nvar __vue_script__$7 = script$7;\n\n/* template */\nvar __vue_render__$7 = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"b-nav-item-dropdown\", { attrs: { right: _vm.right, \"no-caret\": _vm.noCaret } }, [_c(\"template\", { slot: \"button-content\" }, [_vm._t(\"button-content\", [_c(\"img\", {\n    staticClass: \"img-avatar\",\n    attrs: {\n      src: \"static/img/avatars/6.jpg\",\n      alt: \"admin@bootstrapmaster.com\"\n    }\n  })])], 2), _vm._v(\" \"), _vm._t(\"default\", [_c(\"div\", { style: { right: \"auto\", height: \"400px\" } }, [_vm._v(\"dropdown\")])])], 2);\n};\nvar __vue_staticRenderFns__$7 = [];\n__vue_render__$7._withStripped = true;\n\nvar __vue_template__$7 = typeof __vue_render__$7 !== 'undefined' ? { render: __vue_render__$7, staticRenderFns: __vue_staticRenderFns__$7 } : {};\n/* style */\nvar __vue_inject_styles__$7 = undefined;\n/* scoped */\nvar __vue_scope_id__$7 = undefined;\n/* module identifier */\nvar __vue_module_identifier__$7 = undefined;\n/* functional template */\nvar __vue_is_functional_template__$7 = false;\n/* component normalizer */\nfunction __vue_normalize__$7(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = script || {};\n\n  {\n    component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Header\\\\HeaderDropdown.vue\";\n  }\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\nfunction __vue_create_injector__$7() {\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var styles = __vue_create_injector__$7.styles || (__vue_create_injector__$7.styles = {});\n  var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase());\n\n  return function addStyle(id, css) {\n    if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return; // SSR styles are present.\n\n    var group = isOldIE ? css.media || 'default' : id;\n    var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });\n\n    if (!style.ids.includes(id)) {\n      var code = css.source;\n      var index = style.ids.length;\n\n      style.ids.push(id);\n\n      if (isOldIE) {\n        style.element = style.element || document.querySelector('style[data-group=' + group + ']');\n      }\n\n      if (!style.element) {\n        var el = style.element = document.createElement('style');\n        el.type = 'text/css';\n\n        if (css.media) el.setAttribute('media', css.media);\n        if (isOldIE) {\n          el.setAttribute('data-group', group);\n          el.setAttribute('data-next-index', '0');\n        }\n\n        head.appendChild(el);\n      }\n\n      if (isOldIE) {\n        index = parseInt(style.element.getAttribute('data-next-index'));\n        style.element.setAttribute('data-next-index', index + 1);\n      }\n\n      if (style.element.styleSheet) {\n        style.parts.push(code);\n        style.element.styleSheet.cssText = style.parts.filter(Boolean).join('\\n');\n      } else {\n        var textNode = document.createTextNode(code);\n        var nodes = style.element.childNodes;\n        if (nodes[index]) style.element.removeChild(nodes[index]);\n        if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);\n      }\n    }\n  };\n}\n/* style inject SSR */\n\nvar HeaderDropdown = __vue_normalize__$7(__vue_template__$7, __vue_inject_styles__$7, typeof __vue_script__$7 === 'undefined' ? {} : __vue_script__$7, __vue_scope_id__$7, __vue_is_functional_template__$7, __vue_module_identifier__$7, typeof __vue_create_injector__$7 !== 'undefined' ? __vue_create_injector__$7 : function () {}, typeof __vue_create_injector_ssr__ !== 'undefined' ? __vue_create_injector_ssr__ : function () {});\n\n//\n//\n//\n//\n//\n\nvar script$8 = {\n  name: 'sidebar',\n  props: {\n    fixed: {\n      type: Boolean,\n      default: false\n    }\n  },\n  mounted: function mounted() {\n    this.isFixed();\n  },\n  methods: {\n    isFixed: function isFixed() {\n      this.fixed ? document.body.classList.add('sidebar-fixed') : document.body.classList.remove('sidebar-fixed');\n      return this.fixed;\n    }\n  }\n};\n\nvar __vue_script__$8 = script$8;\n\n/* template */\nvar __vue_render__$8 = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"div\", { staticClass: \"sidebar\" }, [_vm._t(\"default\", [_vm._v(\"Sidebar\")])], 2);\n};\nvar __vue_staticRenderFns__$8 = [];\n__vue_render__$8._withStripped = true;\n\nvar __vue_template__$8 = typeof __vue_render__$8 !== 'undefined' ? { render: __vue_render__$8, staticRenderFns: __vue_staticRenderFns__$8 } : {};\n/* style */\nvar __vue_inject_styles__$8 = undefined;\n/* scoped */\nvar __vue_scope_id__$8 = undefined;\n/* module identifier */\nvar __vue_module_identifier__$8 = undefined;\n/* functional template */\nvar __vue_is_functional_template__$8 = false;\n/* component normalizer */\nfunction __vue_normalize__$8(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = script || {};\n\n  {\n    component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Sidebar\\\\Sidebar.vue\";\n  }\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\nfunction __vue_create_injector__$8() {\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var styles = __vue_create_injector__$8.styles || (__vue_create_injector__$8.styles = {});\n  var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase());\n\n  return function addStyle(id, css) {\n    if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return; // SSR styles are present.\n\n    var group = isOldIE ? css.media || 'default' : id;\n    var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });\n\n    if (!style.ids.includes(id)) {\n      var code = css.source;\n      var index = style.ids.length;\n\n      style.ids.push(id);\n\n      if (isOldIE) {\n        style.element = style.element || document.querySelector('style[data-group=' + group + ']');\n      }\n\n      if (!style.element) {\n        var el = style.element = document.createElement('style');\n        el.type = 'text/css';\n\n        if (css.media) el.setAttribute('media', css.media);\n        if (isOldIE) {\n          el.setAttribute('data-group', group);\n          el.setAttribute('data-next-index', '0');\n        }\n\n        head.appendChild(el);\n      }\n\n      if (isOldIE) {\n        index = parseInt(style.element.getAttribute('data-next-index'));\n        style.element.setAttribute('data-next-index', index + 1);\n      }\n\n      if (style.element.styleSheet) {\n        style.parts.push(code);\n        style.element.styleSheet.cssText = style.parts.filter(Boolean).join('\\n');\n      } else {\n        var textNode = document.createTextNode(code);\n        var nodes = style.element.childNodes;\n        if (nodes[index]) style.element.removeChild(nodes[index]);\n        if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);\n      }\n    }\n  };\n}\n/* style inject SSR */\n\nvar Sidebar = __vue_normalize__$8(__vue_template__$8, __vue_inject_styles__$8, typeof __vue_script__$8 === 'undefined' ? {} : __vue_script__$8, __vue_scope_id__$8, __vue_is_functional_template__$8, __vue_module_identifier__$8, typeof __vue_create_injector__$8 !== 'undefined' ? __vue_create_injector__$8 : function () {}, typeof __vue_create_injector_ssr__ !== 'undefined' ? __vue_create_injector_ssr__ : function () {});\n\n//\n//\n//\n//\n//\n//\n\nvar script$9 = {\n  name: 'sidebar-footer'\n};\n\nvar __vue_script__$9 = script$9;\n\n/* template */\nvar __vue_render__$9 = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"div\");\n};\nvar __vue_staticRenderFns__$9 = [];\n__vue_render__$9._withStripped = true;\n\nvar __vue_template__$9 = typeof __vue_render__$9 !== 'undefined' ? { render: __vue_render__$9, staticRenderFns: __vue_staticRenderFns__$9 } : {};\n/* style */\nvar __vue_inject_styles__$9 = undefined;\n/* scoped */\nvar __vue_scope_id__$9 = undefined;\n/* module identifier */\nvar __vue_module_identifier__$9 = undefined;\n/* functional template */\nvar __vue_is_functional_template__$9 = false;\n/* component normalizer */\nfunction __vue_normalize__$9(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = script || {};\n\n  {\n    component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Sidebar\\\\SidebarFooter.vue\";\n  }\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\nfunction __vue_create_injector__$9() {\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var styles = __vue_create_injector__$9.styles || (__vue_create_injector__$9.styles = {});\n  var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase());\n\n  return function addStyle(id, css) {\n    if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return; // SSR styles are present.\n\n    var group = isOldIE ? css.media || 'default' : id;\n    var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });\n\n    if (!style.ids.includes(id)) {\n      var code = css.source;\n      var index = style.ids.length;\n\n      style.ids.push(id);\n\n      if (isOldIE) {\n        style.element = style.element || document.querySelector('style[data-group=' + group + ']');\n      }\n\n      if (!style.element) {\n        var el = style.element = document.createElement('style');\n        el.type = 'text/css';\n\n        if (css.media) el.setAttribute('media', css.media);\n        if (isOldIE) {\n          el.setAttribute('data-group', group);\n          el.setAttribute('data-next-index', '0');\n        }\n\n        head.appendChild(el);\n      }\n\n      if (isOldIE) {\n        index = parseInt(style.element.getAttribute('data-next-index'));\n        style.element.setAttribute('data-next-index', index + 1);\n      }\n\n      if (style.element.styleSheet) {\n        style.parts.push(code);\n        style.element.styleSheet.cssText = style.parts.filter(Boolean).join('\\n');\n      } else {\n        var textNode = document.createTextNode(code);\n        var nodes = style.element.childNodes;\n        if (nodes[index]) style.element.removeChild(nodes[index]);\n        if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);\n      }\n    }\n  };\n}\n/* style inject SSR */\n\nvar SidebarFooter = __vue_normalize__$9(__vue_template__$9, __vue_inject_styles__$9, typeof __vue_script__$9 === 'undefined' ? {} : __vue_script__$9, __vue_scope_id__$9, __vue_is_functional_template__$9, __vue_module_identifier__$9, typeof __vue_create_injector__$9 !== 'undefined' ? __vue_create_injector__$9 : function () {}, typeof __vue_create_injector_ssr__ !== 'undefined' ? __vue_create_injector_ssr__ : function () {});\n\n//\n//\n//\n//\n//\n\n\nvar script$a = {\n  name: 'sidebar-form'\n};\n\nvar __vue_script__$a = script$a;\n\n/* template */\nvar __vue_render__$a = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"div\");\n};\nvar __vue_staticRenderFns__$a = [];\n__vue_render__$a._withStripped = true;\n\nvar __vue_template__$a = typeof __vue_render__$a !== 'undefined' ? { render: __vue_render__$a, staticRenderFns: __vue_staticRenderFns__$a } : {};\n/* style */\nvar __vue_inject_styles__$a = undefined;\n/* scoped */\nvar __vue_scope_id__$a = undefined;\n/* module identifier */\nvar __vue_module_identifier__$a = undefined;\n/* functional template */\nvar __vue_is_functional_template__$a = false;\n/* component normalizer */\nfunction __vue_normalize__$a(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = script || {};\n\n  {\n    component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Sidebar\\\\SidebarForm.vue\";\n  }\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\nfunction __vue_create_injector__$a() {\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var styles = __vue_create_injector__$a.styles || (__vue_create_injector__$a.styles = {});\n  var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase());\n\n  return function addStyle(id, css) {\n    if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return; // SSR styles are present.\n\n    var group = isOldIE ? css.media || 'default' : id;\n    var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });\n\n    if (!style.ids.includes(id)) {\n      var code = css.source;\n      var index = style.ids.length;\n\n      style.ids.push(id);\n\n      if (isOldIE) {\n        style.element = style.element || document.querySelector('style[data-group=' + group + ']');\n      }\n\n      if (!style.element) {\n        var el = style.element = document.createElement('style');\n        el.type = 'text/css';\n\n        if (css.media) el.setAttribute('media', css.media);\n        if (isOldIE) {\n          el.setAttribute('data-group', group);\n          el.setAttribute('data-next-index', '0');\n        }\n\n        head.appendChild(el);\n      }\n\n      if (isOldIE) {\n        index = parseInt(style.element.getAttribute('data-next-index'));\n        style.element.setAttribute('data-next-index', index + 1);\n      }\n\n      if (style.element.styleSheet) {\n        style.parts.push(code);\n        style.element.styleSheet.cssText = style.parts.filter(Boolean).join('\\n');\n      } else {\n        var textNode = document.createTextNode(code);\n        var nodes = style.element.childNodes;\n        if (nodes[index]) style.element.removeChild(nodes[index]);\n        if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);\n      }\n    }\n  };\n}\n/* style inject SSR */\n\nvar SidebarForm = __vue_normalize__$a(__vue_template__$a, __vue_inject_styles__$a, typeof __vue_script__$a === 'undefined' ? {} : __vue_script__$a, __vue_scope_id__$a, __vue_is_functional_template__$a, __vue_module_identifier__$a, typeof __vue_create_injector__$a !== 'undefined' ? __vue_create_injector__$a : function () {}, typeof __vue_create_injector_ssr__ !== 'undefined' ? __vue_create_injector_ssr__ : function () {});\n\n//\n//\n//\n//\n//\n\n\nvar script$b = {\n  name: 'sidebar-header'\n};\n\nvar __vue_script__$b = script$b;\n\n/* template */\nvar __vue_render__$b = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"div\");\n};\nvar __vue_staticRenderFns__$b = [];\n__vue_render__$b._withStripped = true;\n\nvar __vue_template__$b = typeof __vue_render__$b !== 'undefined' ? { render: __vue_render__$b, staticRenderFns: __vue_staticRenderFns__$b } : {};\n/* style */\nvar __vue_inject_styles__$b = undefined;\n/* scoped */\nvar __vue_scope_id__$b = undefined;\n/* module identifier */\nvar __vue_module_identifier__$b = undefined;\n/* functional template */\nvar __vue_is_functional_template__$b = false;\n/* component normalizer */\nfunction __vue_normalize__$b(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = script || {};\n\n  {\n    component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Sidebar\\\\SidebarHeader.vue\";\n  }\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\nfunction __vue_create_injector__$b() {\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var styles = __vue_create_injector__$b.styles || (__vue_create_injector__$b.styles = {});\n  var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase());\n\n  return function addStyle(id, css) {\n    if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return; // SSR styles are present.\n\n    var group = isOldIE ? css.media || 'default' : id;\n    var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });\n\n    if (!style.ids.includes(id)) {\n      var code = css.source;\n      var index = style.ids.length;\n\n      style.ids.push(id);\n\n      if (isOldIE) {\n        style.element = style.element || document.querySelector('style[data-group=' + group + ']');\n      }\n\n      if (!style.element) {\n        var el = style.element = document.createElement('style');\n        el.type = 'text/css';\n\n        if (css.media) el.setAttribute('media', css.media);\n        if (isOldIE) {\n          el.setAttribute('data-group', group);\n          el.setAttribute('data-next-index', '0');\n        }\n\n        head.appendChild(el);\n      }\n\n      if (isOldIE) {\n        index = parseInt(style.element.getAttribute('data-next-index'));\n        style.element.setAttribute('data-next-index', index + 1);\n      }\n\n      if (style.element.styleSheet) {\n        style.parts.push(code);\n        style.element.styleSheet.cssText = style.parts.filter(Boolean).join('\\n');\n      } else {\n        var textNode = document.createTextNode(code);\n        var nodes = style.element.childNodes;\n        if (nodes[index]) style.element.removeChild(nodes[index]);\n        if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);\n      }\n    }\n  };\n}\n/* style inject SSR */\n\nvar SidebarHeader = __vue_normalize__$b(__vue_template__$b, __vue_inject_styles__$b, typeof __vue_script__$b === 'undefined' ? {} : __vue_script__$b, __vue_scope_id__$b, __vue_is_functional_template__$b, __vue_module_identifier__$b, typeof __vue_create_injector__$b !== 'undefined' ? __vue_create_injector__$b : function () {}, typeof __vue_create_injector_ssr__ !== 'undefined' ? __vue_create_injector_ssr__ : function () {});\n\n//\n//\n//\n\n\nvar script$c = {\n  name: 'sidebar-minimizer',\n  methods: {\n    onClick: function onClick() {\n      this.sidebarMinimize();\n      this.brandMinimize();\n    },\n    sidebarMinimize: function sidebarMinimize() {\n      document.body.classList.toggle('sidebar-minimized');\n      var sidebar = document.querySelector('.sidebar-nav section');\n      if (sidebar) {\n        var toggleOn = sidebar.classList.toggle('ps');\n        sidebar.classList.toggle('ps-container', toggleOn);\n        sidebar.classList.toggle('ps--active-y', toggleOn);\n      }\n      var railY = document.querySelector('.ps__scrollbar-y-rail');\n      if (railY) {\n        railY.removeAttribute('style');\n      }\n    },\n    brandMinimize: function brandMinimize() {\n      document.body.classList.toggle('brand-minimized');\n    }\n  }\n};\n\nvar __vue_script__$c = script$c;\n\n/* template */\nvar __vue_render__$c = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"button\", {\n    staticClass: \"sidebar-minimizer\",\n    attrs: { type: \"button\" },\n    on: {\n      click: function click($event) {\n        _vm.onClick();\n      }\n    }\n  });\n};\nvar __vue_staticRenderFns__$c = [];\n__vue_render__$c._withStripped = true;\n\nvar __vue_template__$c = typeof __vue_render__$c !== 'undefined' ? { render: __vue_render__$c, staticRenderFns: __vue_staticRenderFns__$c } : {};\n/* style */\nvar __vue_inject_styles__$c = undefined;\n/* scoped */\nvar __vue_scope_id__$c = undefined;\n/* module identifier */\nvar __vue_module_identifier__$c = undefined;\n/* functional template */\nvar __vue_is_functional_template__$c = false;\n/* component normalizer */\nfunction __vue_normalize__$c(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = script || {};\n\n  {\n    component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Sidebar\\\\SidebarMinimizer.vue\";\n  }\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\nfunction __vue_create_injector__$c() {\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var styles = __vue_create_injector__$c.styles || (__vue_create_injector__$c.styles = {});\n  var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase());\n\n  return function addStyle(id, css) {\n    if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return; // SSR styles are present.\n\n    var group = isOldIE ? css.media || 'default' : id;\n    var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });\n\n    if (!style.ids.includes(id)) {\n      var code = css.source;\n      var index = style.ids.length;\n\n      style.ids.push(id);\n\n      if (isOldIE) {\n        style.element = style.element || document.querySelector('style[data-group=' + group + ']');\n      }\n\n      if (!style.element) {\n        var el = style.element = document.createElement('style');\n        el.type = 'text/css';\n\n        if (css.media) el.setAttribute('media', css.media);\n        if (isOldIE) {\n          el.setAttribute('data-group', group);\n          el.setAttribute('data-next-index', '0');\n        }\n\n        head.appendChild(el);\n      }\n\n      if (isOldIE) {\n        index = parseInt(style.element.getAttribute('data-next-index'));\n        style.element.setAttribute('data-next-index', index + 1);\n      }\n\n      if (style.element.styleSheet) {\n        style.parts.push(code);\n        style.element.styleSheet.cssText = style.parts.filter(Boolean).join('\\n');\n      } else {\n        var textNode = document.createTextNode(code);\n        var nodes = style.element.childNodes;\n        if (nodes[index]) style.element.removeChild(nodes[index]);\n        if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);\n      }\n    }\n  };\n}\n/* style inject SSR */\n\nvar SidebarMinimizer = __vue_normalize__$c(__vue_template__$c, __vue_inject_styles__$c, typeof __vue_script__$c === 'undefined' ? {} : __vue_script__$c, __vue_scope_id__$c, __vue_is_functional_template__$c, __vue_module_identifier__$c, typeof __vue_create_injector__$c !== 'undefined' ? __vue_create_injector__$c : function () {}, typeof __vue_create_injector_ssr__ !== 'undefined' ? __vue_create_injector_ssr__ : function () {});\n\nvar _global = createCommonjsModule(function (module) {\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n});\n\nvar _aFunction = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n// optional / simple context binding\n\nvar _ctx = function (fn, that, length) {\n  _aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\nvar _isObject = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\nvar _anObject = function (it) {\n  if (!_isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\nvar _fails = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n// Thank's IE8 for his funny defineProperty\nvar _descriptors = !_fails(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\nvar document$1 = _global.document;\n// typeof document.createElement is 'object' in old IE\nvar is = _isObject(document$1) && _isObject(document$1.createElement);\nvar _domCreate = function (it) {\n  return is ? document$1.createElement(it) : {};\n};\n\nvar _ie8DomDefine = !_descriptors && !_fails(function () {\n  return Object.defineProperty(_domCreate('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n// 7.1.1 ToPrimitive(input [, PreferredType])\n\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nvar _toPrimitive = function (it, S) {\n  if (!_isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\nvar dP = Object.defineProperty;\n\nvar f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  _anObject(O);\n  P = _toPrimitive(P, true);\n  _anObject(Attributes);\n  if (_ie8DomDefine) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\nvar _objectDp = {\n\tf: f\n};\n\nvar _propertyDesc = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\nvar _hide = _descriptors ? function (object, key, value) {\n  return _objectDp.f(object, key, _propertyDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\nvar hasOwnProperty = {}.hasOwnProperty;\nvar _has = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? _global : IS_STATIC ? _global[name] : (_global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && _has(exports, key)) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? _ctx(out, _global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) _hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nvar _export = $export;\n\nvar toString = {}.toString;\n\nvar _cof = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\n\n// eslint-disable-next-line no-prototype-builtins\nvar _iobject = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return _cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n// 7.2.1 RequireObjectCoercible(argument)\nvar _defined = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n// to indexed object, toObject with fallback for non-array-like ES3 strings\n\n\nvar _toIobject = function (it) {\n  return _iobject(_defined(it));\n};\n\n// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nvar _toInteger = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n// 7.1.15 ToLength\n\nvar min = Math.min;\nvar _toLength = function (it) {\n  return it > 0 ? min(_toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\nvar max = Math.max;\nvar min$1 = Math.min;\nvar _toAbsoluteIndex = function (index, length) {\n  index = _toInteger(index);\n  return index < 0 ? max(index + length, 0) : min$1(index, length);\n};\n\n// false -> Array#indexOf\n// true  -> Array#includes\n\n\n\nvar _arrayIncludes = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = _toIobject($this);\n    var length = _toLength(O.length);\n    var index = _toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nvar _shared = createCommonjsModule(function (module) {\nvar SHARED = '__core-js_shared__';\nvar store = _global[SHARED] || (_global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: _core.version,\n  mode: 'pure',\n  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'\n});\n});\n\nvar id = 0;\nvar px = Math.random();\nvar _uid = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\nvar shared = _shared('keys');\n\nvar _sharedKey = function (key) {\n  return shared[key] || (shared[key] = _uid(key));\n};\n\nvar arrayIndexOf = _arrayIncludes(false);\nvar IE_PROTO = _sharedKey('IE_PROTO');\n\nvar _objectKeysInternal = function (object, names) {\n  var O = _toIobject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) _has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (_has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n// IE 8- don't enum bug keys\nvar _enumBugKeys = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n// 19.1.2.14 / 15.2.3.14 Object.keys(O)\n\n\n\nvar _objectKeys = Object.keys || function keys(O) {\n  return _objectKeysInternal(O, _enumBugKeys);\n};\n\nvar f$1 = Object.getOwnPropertySymbols;\n\nvar _objectGops = {\n\tf: f$1\n};\n\nvar f$2 = {}.propertyIsEnumerable;\n\nvar _objectPie = {\n\tf: f$2\n};\n\n// 7.1.13 ToObject(argument)\n\nvar _toObject = function (it) {\n  return Object(_defined(it));\n};\n\n// 19.1.2.1 Object.assign(target, source, ...)\n\n\n\n\n\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nvar _objectAssign = !$assign || _fails(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = _toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = _objectGops.f;\n  var isEnum = _objectPie.f;\n  while (aLen > index) {\n    var S = _iobject(arguments[index++]);\n    var keys = getSymbols ? _objectKeys(S).concat(getSymbols(S)) : _objectKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  } return T;\n} : $assign;\n\n// 19.1.3.1 Object.assign(target, source)\n\n\n_export(_export.S + _export.F, 'Object', { assign: _objectAssign });\n\nvar assign = _core.Object.assign;\n\nvar assign$1 = createCommonjsModule(function (module) {\nmodule.exports = { \"default\": assign, __esModule: true };\n});\n\nunwrapExports(assign$1);\n\nvar _extends = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\n\n\n\nvar _assign2 = _interopRequireDefault(assign$1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _assign2.default || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n});\n\nvar _extends$1 = unwrapExports(_extends);\n\n// true  -> String#at\n// false -> String#codePointAt\nvar _stringAt = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(_defined(that));\n    var i = _toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\nvar _redefine = _hide;\n\nvar _iterators = {};\n\nvar _objectDps = _descriptors ? Object.defineProperties : function defineProperties(O, Properties) {\n  _anObject(O);\n  var keys = _objectKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) _objectDp.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\nvar document$2 = _global.document;\nvar _html = document$2 && document$2.documentElement;\n\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n\n\n\nvar IE_PROTO$1 = _sharedKey('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE$1 = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = _domCreate('iframe');\n  var i = _enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  _html.appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE$1][_enumBugKeys[i]];\n  return createDict();\n};\n\nvar _objectCreate = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE$1] = _anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE$1] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO$1] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : _objectDps(result, Properties);\n};\n\nvar _wks = createCommonjsModule(function (module) {\nvar store = _shared('wks');\n\nvar Symbol = _global.Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : _uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n});\n\nvar def = _objectDp.f;\n\nvar TAG = _wks('toStringTag');\n\nvar _setToStringTag = function (it, tag, stat) {\n  if (it && !_has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n_hide(IteratorPrototype, _wks('iterator'), function () { return this; });\n\nvar _iterCreate = function (Constructor, NAME, next) {\n  Constructor.prototype = _objectCreate(IteratorPrototype, { next: _propertyDesc(1, next) });\n  _setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\n\n\nvar IE_PROTO$2 = _sharedKey('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nvar _objectGpo = Object.getPrototypeOf || function (O) {\n  O = _toObject(O);\n  if (_has(O, IE_PROTO$2)) return O[IE_PROTO$2];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n\nvar ITERATOR = _wks('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nvar _iterDefine = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  _iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = _objectGpo($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      _setToStringTag(IteratorPrototype, TAG, true);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    _hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  _iterators[NAME] = $default;\n  _iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) _redefine(proto, key, methods[key]);\n    } else _export(_export.P + _export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\nvar $at = _stringAt(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\n_iterDefine(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n\n// call something on iterator step with safe closing on error\n\nvar _iterCall = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(_anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) _anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n// check on default Array iterator\n\nvar ITERATOR$1 = _wks('iterator');\nvar ArrayProto = Array.prototype;\n\nvar _isArrayIter = function (it) {\n  return it !== undefined && (_iterators.Array === it || ArrayProto[ITERATOR$1] === it);\n};\n\nvar _createProperty = function (object, index, value) {\n  if (index in object) _objectDp.f(object, index, _propertyDesc(0, value));\n  else object[index] = value;\n};\n\n// getting tag from 19.1.3.6 Object.prototype.toString()\n\nvar TAG$1 = _wks('toStringTag');\n// ES3 wrong here\nvar ARG = _cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nvar _classof = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG$1)) == 'string' ? T\n    // builtinTag case\n    : ARG ? _cof(O)\n    // ES3 arguments fallback\n    : (B = _cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\nvar ITERATOR$2 = _wks('iterator');\n\nvar core_getIteratorMethod = _core.getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR$2]\n    || it['@@iterator']\n    || _iterators[_classof(it)];\n};\n\nvar ITERATOR$3 = _wks('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR$3]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n} catch (e) { /* empty */ }\n\nvar _iterDetect = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR$3]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR$3] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n\n_export(_export.S + _export.F * !_iterDetect(function (iter) { }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = _toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = core_getIteratorMethod(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = _ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && _isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        _createProperty(result, index, mapping ? _iterCall(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = _toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        _createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n\nvar from = _core.Array.from;\n\nvar from$1 = createCommonjsModule(function (module) {\nmodule.exports = { \"default\": from, __esModule: true };\n});\n\nunwrapExports(from$1);\n\nvar toConsumableArray = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\n\n\n\nvar _from2 = _interopRequireDefault(from$1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return (0, _from2.default)(arr);\n  }\n};\n});\n\nvar _toConsumableArray = unwrapExports(toConsumableArray);\n\n//\n//\n//\n//\n\nvar script$d = {\n  name: 'sidebar-nav-divider',\n  props: {\n    classes: {\n      type: String,\n      default: ''\n    }\n  },\n  computed: {\n    classList: function classList() {\n      return ['divider'].concat(_toConsumableArray(this.itemClasses));\n    },\n    itemClasses: function itemClasses() {\n      return this.classes ? this.classes.split(' ') : '';\n    }\n  }\n};\n\nvar __vue_script__$d = script$d;\n\n/* template */\nvar __vue_render__$d = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"li\", { class: _vm.classList });\n};\nvar __vue_staticRenderFns__$d = [];\n__vue_render__$d._withStripped = true;\n\nvar __vue_template__$d = typeof __vue_render__$d !== 'undefined' ? { render: __vue_render__$d, staticRenderFns: __vue_staticRenderFns__$d } : {};\n/* style */\nvar __vue_inject_styles__$d = undefined;\n/* scoped */\nvar __vue_scope_id__$d = undefined;\n/* module identifier */\nvar __vue_module_identifier__$d = undefined;\n/* functional template */\nvar __vue_is_functional_template__$d = false;\n/* component normalizer */\nfunction __vue_normalize__$d(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = script || {};\n\n  {\n    component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Sidebar\\\\SidebarNavDivider.vue\";\n  }\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\nfunction __vue_create_injector__$d() {\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var styles = __vue_create_injector__$d.styles || (__vue_create_injector__$d.styles = {});\n  var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase());\n\n  return function addStyle(id, css) {\n    if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return; // SSR styles are present.\n\n    var group = isOldIE ? css.media || 'default' : id;\n    var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });\n\n    if (!style.ids.includes(id)) {\n      var code = css.source;\n      var index = style.ids.length;\n\n      style.ids.push(id);\n\n      if (isOldIE) {\n        style.element = style.element || document.querySelector('style[data-group=' + group + ']');\n      }\n\n      if (!style.element) {\n        var el = style.element = document.createElement('style');\n        el.type = 'text/css';\n\n        if (css.media) el.setAttribute('media', css.media);\n        if (isOldIE) {\n          el.setAttribute('data-group', group);\n          el.setAttribute('data-next-index', '0');\n        }\n\n        head.appendChild(el);\n      }\n\n      if (isOldIE) {\n        index = parseInt(style.element.getAttribute('data-next-index'));\n        style.element.setAttribute('data-next-index', index + 1);\n      }\n\n      if (style.element.styleSheet) {\n        style.parts.push(code);\n        style.element.styleSheet.cssText = style.parts.filter(Boolean).join('\\n');\n      } else {\n        var textNode = document.createTextNode(code);\n        var nodes = style.element.childNodes;\n        if (nodes[index]) style.element.removeChild(nodes[index]);\n        if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);\n      }\n    }\n  };\n}\n/* style inject SSR */\n\nvar SidebarNavDivider = __vue_normalize__$d(__vue_template__$d, __vue_inject_styles__$d, typeof __vue_script__$d === 'undefined' ? {} : __vue_script__$d, __vue_scope_id__$d, __vue_is_functional_template__$d, __vue_module_identifier__$d, typeof __vue_create_injector__$d !== 'undefined' ? __vue_create_injector__$d : function () {}, typeof __vue_create_injector_ssr__ !== 'undefined' ? __vue_create_injector_ssr__ : function () {});\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nvar script$e = {\n  props: {\n    name: {\n      type: String,\n      default: ''\n    },\n    url: {\n      type: String,\n      default: ''\n    },\n    icon: {\n      type: String,\n      default: ''\n    }\n  },\n  computed: {\n    classIcon: function classIcon() {\n      return ['nav-icon', this.icon];\n    }\n  },\n  methods: {\n    handleClick: function handleClick(e) {\n      e.preventDefault();\n        for (var i = 0; i < e.target.parentElement.parentElement.children.length; i++) {\n            if (e.target.parentElement.parentElement.children[i] == e.target.parentElement) {\n                e.target.parentElement.classList.toggle('open');\n            } else {\n                e.target.parentElement.parentElement.children[i].classList.remove('open');\n            }\n        }\n    }\n  }\n};\n\nvar __vue_script__$e = script$e;\n\n/* template */\nvar __vue_render__$e = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"router-link\", {\n    staticClass: \"nav-item nav-dropdown\",\n    attrs: { tag: \"li\", to: _vm.url, disabled: \"\" }\n  }, [_c(\"div\", {\n    staticClass: \"nav-link nav-dropdown-toggle\",\n    on: { click: _vm.handleClick }\n  }, [_c(\"i\", { class: _vm.classIcon }), _vm._v(\" \" + _vm._s(_vm.name))]), _vm._v(\" \"), _c(\"ul\", { staticClass: \"nav-dropdown-items\" }, [_vm._t(\"default\")], 2)]);\n};\nvar __vue_staticRenderFns__$e = [];\n__vue_render__$e._withStripped = true;\n\nvar __vue_template__$e = typeof __vue_render__$e !== 'undefined' ? { render: __vue_render__$e, staticRenderFns: __vue_staticRenderFns__$e } : {};\n/* style */\nvar __vue_inject_styles__$e = function (inject) {\n  if (!inject) return;\n  inject(\"data-v-6c5c85a4_0\", { source: \"\\n.nav-link[data-v-6c5c85a4] {\\n  cursor:pointer;\\n}\\n\", map: undefined, media: undefined });\n};\n/* scoped */\nvar __vue_scope_id__$e = \"data-v-6c5c85a4\";\n/* module identifier */\nvar __vue_module_identifier__$e = undefined;\n/* functional template */\nvar __vue_is_functional_template__$e = false;\n/* component normalizer */\nfunction __vue_normalize__$e(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = script || {};\n\n  {\n    component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Sidebar\\\\SidebarNavDropdown.vue\";\n  }\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  {\n    var hook = void 0;\n    if (style) {\n      hook = function hook(context) {\n        style.call(this, createInjector(context));\n      };\n    }\n\n    if (hook !== undefined) {\n      if (component.functional) {\n        // register for functional component in vue file\n        var originalRender = component.render;\n        component.render = function renderWithStyleInjection(h, context) {\n          hook.call(context);\n          return originalRender(h, context);\n        };\n      } else {\n        // inject component registration as beforeCreate hook\n        var existing = component.beforeCreate;\n        component.beforeCreate = existing ? [].concat(existing, hook) : [hook];\n      }\n    }\n  }\n\n  return component;\n}\n/* style inject */\nfunction __vue_create_injector__$e() {\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var styles = __vue_create_injector__$e.styles || (__vue_create_injector__$e.styles = {});\n  var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase());\n\n  return function addStyle(id, css) {\n    if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return; // SSR styles are present.\n\n    var group = isOldIE ? css.media || 'default' : id;\n    var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });\n\n    if (!style.ids.includes(id)) {\n      var code = css.source;\n      var index = style.ids.length;\n\n      style.ids.push(id);\n\n      if (isOldIE) {\n        style.element = style.element || document.querySelector('style[data-group=' + group + ']');\n      }\n\n      if (!style.element) {\n        var el = style.element = document.createElement('style');\n        el.type = 'text/css';\n\n        if (css.media) el.setAttribute('media', css.media);\n        if (isOldIE) {\n          el.setAttribute('data-group', group);\n          el.setAttribute('data-next-index', '0');\n        }\n\n        head.appendChild(el);\n      }\n\n      if (isOldIE) {\n        index = parseInt(style.element.getAttribute('data-next-index'));\n        style.element.setAttribute('data-next-index', index + 1);\n      }\n\n      if (style.element.styleSheet) {\n        style.parts.push(code);\n        style.element.styleSheet.cssText = style.parts.filter(Boolean).join('\\n');\n      } else {\n        var textNode = document.createTextNode(code);\n        var nodes = style.element.childNodes;\n        if (nodes[index]) style.element.removeChild(nodes[index]);\n        if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);\n      }\n    }\n  };\n}\n/* style inject SSR */\n\nvar SidebarNavDropdown = __vue_normalize__$e(__vue_template__$e, __vue_inject_styles__$e, typeof __vue_script__$e === 'undefined' ? {} : __vue_script__$e, __vue_scope_id__$e, __vue_is_functional_template__$e, __vue_module_identifier__$e, typeof __vue_create_injector__$e !== 'undefined' ? __vue_create_injector__$e : function () {}, typeof __vue_create_injector_ssr__ !== 'undefined' ? __vue_create_injector_ssr__ : function () {});\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nvar script$f = {\n  name: 'sidebar-nav-link',\n  props: {\n    name: {\n      type: String,\n      default: ''\n    },\n    url: {\n      type: String,\n      default: ''\n    },\n    icon: {\n      type: String,\n      default: ''\n    },\n    badge: {\n      type: Object,\n      default: function _default() {}\n    },\n    variant: {\n      type: String,\n      default: ''\n    },\n    classes: {\n      type: String,\n      default: ''\n    }\n  },\n  computed: {\n    classList: function classList() {\n      return ['nav-link', this.linkVariant].concat(_toConsumableArray(this.itemClasses));\n    },\n    classIcon: function classIcon() {\n      return ['nav-icon', this.icon];\n    },\n    linkVariant: function linkVariant() {\n      return this.variant ? 'nav-link-' + this.variant : '';\n    },\n    itemClasses: function itemClasses() {\n      return this.classes ? this.classes.split(' ') : [];\n    },\n    isExternalLink: function isExternalLink() {\n      if (this.url.substring(0, 4) === 'http') {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }\n};\n\nvar __vue_script__$f = script$f;\n\n/* template */\nvar __vue_render__$f = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _vm.isExternalLink ? _c(\"div\", [_c(\"a\", { class: _vm.classList, attrs: { href: _vm.url } }, [_c(\"i\", { class: _vm.classIcon }), _vm._v(\" \" + _vm._s(_vm.name) + \"\\n    \"), _vm.badge && _vm.badge.text ? _c(\"b-badge\", { attrs: { variant: _vm.badge.variant } }, [_vm._v(_vm._s(_vm.badge.text))]) : _vm._e()], 1)]) : _c(\"div\", [_c(\"router-link\", { class: _vm.classList, attrs: { to: _vm.url } }, [_c(\"i\", { class: _vm.classIcon }), _vm._v(\" \" + _vm._s(_vm.name) + \"\\n    \"), _vm.badge && _vm.badge.text ? _c(\"b-badge\", { attrs: { variant: _vm.badge.variant } }, [_vm._v(_vm._s(_vm.badge.text))]) : _vm._e()], 1)], 1);\n};\nvar __vue_staticRenderFns__$f = [];\n__vue_render__$f._withStripped = true;\n\nvar __vue_template__$f = typeof __vue_render__$f !== 'undefined' ? { render: __vue_render__$f, staticRenderFns: __vue_staticRenderFns__$f } : {};\n/* style */\nvar __vue_inject_styles__$f = undefined;\n/* scoped */\nvar __vue_scope_id__$f = undefined;\n/* module identifier */\nvar __vue_module_identifier__$f = undefined;\n/* functional template */\nvar __vue_is_functional_template__$f = false;\n/* component normalizer */\nfunction __vue_normalize__$f(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = script || {};\n\n  {\n    component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Sidebar\\\\SidebarNavLink.vue\";\n  }\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\nfunction __vue_create_injector__$f() {\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var styles = __vue_create_injector__$f.styles || (__vue_create_injector__$f.styles = {});\n  var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase());\n\n  return function addStyle(id, css) {\n    if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return; // SSR styles are present.\n\n    var group = isOldIE ? css.media || 'default' : id;\n    var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });\n\n    if (!style.ids.includes(id)) {\n      var code = css.source;\n      var index = style.ids.length;\n\n      style.ids.push(id);\n\n      if (isOldIE) {\n        style.element = style.element || document.querySelector('style[data-group=' + group + ']');\n      }\n\n      if (!style.element) {\n        var el = style.element = document.createElement('style');\n        el.type = 'text/css';\n\n        if (css.media) el.setAttribute('media', css.media);\n        if (isOldIE) {\n          el.setAttribute('data-group', group);\n          el.setAttribute('data-next-index', '0');\n        }\n\n        head.appendChild(el);\n      }\n\n      if (isOldIE) {\n        index = parseInt(style.element.getAttribute('data-next-index'));\n        style.element.setAttribute('data-next-index', index + 1);\n      }\n\n      if (style.element.styleSheet) {\n        style.parts.push(code);\n        style.element.styleSheet.cssText = style.parts.filter(Boolean).join('\\n');\n      } else {\n        var textNode = document.createTextNode(code);\n        var nodes = style.element.childNodes;\n        if (nodes[index]) style.element.removeChild(nodes[index]);\n        if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);\n      }\n    }\n  };\n}\n/* style inject SSR */\n\nvar SidebarNavLink = __vue_normalize__$f(__vue_template__$f, __vue_inject_styles__$f, typeof __vue_script__$f === 'undefined' ? {} : __vue_script__$f, __vue_scope_id__$f, __vue_is_functional_template__$f, __vue_module_identifier__$f, typeof __vue_create_injector__$f !== 'undefined' ? __vue_create_injector__$f : function () {}, typeof __vue_create_injector_ssr__ !== 'undefined' ? __vue_create_injector_ssr__ : function () {});\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nvar script$g = {\n  props: {\n    name: {\n      type: String,\n      default: ''\n    },\n    classes: {\n      type: String,\n      default: ''\n    },\n    wrapper: {\n      type: Object,\n      default: function _default() {}\n    }\n  },\n  computed: {\n    classList: function classList() {\n      return ['nav-title'].concat(_toConsumableArray(this.itemClasses));\n    },\n    itemClasses: function itemClasses() {\n      return this.classes ? this.classes.split(' ') : '';\n    }\n  }\n};\n\nvar __vue_script__$g = script$g;\n\n/* template */\nvar __vue_render__$g = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"li\", { class: _vm.classList }, [_vm.wrapper && _vm.wrapper.element ? [_c(_vm.wrapper.element, _vm._b({ tag: \"component\" }, \"component\", _vm.wrapper.attributes, false), [_vm._v(\"\\n      \" + _vm._s(_vm.name) + \"\\n    \")])] : [_vm._v(\"\\n    \" + _vm._s(_vm.name) + \"\\n  \")]], 2);\n};\nvar __vue_staticRenderFns__$g = [];\n__vue_render__$g._withStripped = true;\n\nvar __vue_template__$g = typeof __vue_render__$g !== 'undefined' ? { render: __vue_render__$g, staticRenderFns: __vue_staticRenderFns__$g } : {};\n/* style */\nvar __vue_inject_styles__$g = undefined;\n/* scoped */\nvar __vue_scope_id__$g = undefined;\n/* module identifier */\nvar __vue_module_identifier__$g = undefined;\n/* functional template */\nvar __vue_is_functional_template__$g = false;\n/* component normalizer */\nfunction __vue_normalize__$g(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = script || {};\n\n  {\n    component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Sidebar\\\\SidebarNavTitle.vue\";\n  }\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\nfunction __vue_create_injector__$g() {\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var styles = __vue_create_injector__$g.styles || (__vue_create_injector__$g.styles = {});\n  var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase());\n\n  return function addStyle(id, css) {\n    if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return; // SSR styles are present.\n\n    var group = isOldIE ? css.media || 'default' : id;\n    var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });\n\n    if (!style.ids.includes(id)) {\n      var code = css.source;\n      var index = style.ids.length;\n\n      style.ids.push(id);\n\n      if (isOldIE) {\n        style.element = style.element || document.querySelector('style[data-group=' + group + ']');\n      }\n\n      if (!style.element) {\n        var el = style.element = document.createElement('style');\n        el.type = 'text/css';\n\n        if (css.media) el.setAttribute('media', css.media);\n        if (isOldIE) {\n          el.setAttribute('data-group', group);\n          el.setAttribute('data-next-index', '0');\n        }\n\n        head.appendChild(el);\n      }\n\n      if (isOldIE) {\n        index = parseInt(style.element.getAttribute('data-next-index'));\n        style.element.setAttribute('data-next-index', index + 1);\n      }\n\n      if (style.element.styleSheet) {\n        style.parts.push(code);\n        style.element.styleSheet.cssText = style.parts.filter(Boolean).join('\\n');\n      } else {\n        var textNode = document.createTextNode(code);\n        var nodes = style.element.childNodes;\n        if (nodes[index]) style.element.removeChild(nodes[index]);\n        if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);\n      }\n    }\n  };\n}\n/* style inject SSR */\n\nvar SidebarNavTitle = __vue_normalize__$g(__vue_template__$g, __vue_inject_styles__$g, typeof __vue_script__$g === 'undefined' ? {} : __vue_script__$g, __vue_scope_id__$g, __vue_is_functional_template__$g, __vue_module_identifier__$g, typeof __vue_create_injector__$g !== 'undefined' ? __vue_create_injector__$g : function () {}, typeof __vue_create_injector_ssr__ !== 'undefined' ? __vue_create_injector_ssr__ : function () {});\n\n//\n//\n//\n//\n//\n//\n\nvar script$h = {\n  name: 'sidebar-nav-item',\n  props: {\n    classes: {\n      type: String,\n      default: ''\n    }\n  },\n  computed: {\n    classList: function classList() {\n      return ['nav-item'].concat(_toConsumableArray(this.itemClasses));\n    },\n    itemClasses: function itemClasses() {\n      return this.classes ? this.classes.split(' ') : '';\n    }\n  },\n  methods: {\n    hideMobile: function hideMobile() {\n      if (document.body.classList.contains('sidebar-show')) {\n        document.body.classList.toggle('sidebar-show');\n      }\n    }\n  }\n};\n\nvar __vue_script__$h = script$h;\n\n/* template */\nvar __vue_render__$h = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"li\", { class: _vm.classList, on: { click: _vm.hideMobile } }, [_vm._t(\"default\")], 2);\n};\nvar __vue_staticRenderFns__$h = [];\n__vue_render__$h._withStripped = true;\n\nvar __vue_template__$h = typeof __vue_render__$h !== 'undefined' ? { render: __vue_render__$h, staticRenderFns: __vue_staticRenderFns__$h } : {};\n/* style */\nvar __vue_inject_styles__$h = undefined;\n/* scoped */\nvar __vue_scope_id__$h = undefined;\n/* module identifier */\nvar __vue_module_identifier__$h = undefined;\n/* functional template */\nvar __vue_is_functional_template__$h = false;\n/* component normalizer */\nfunction __vue_normalize__$h(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = script || {};\n\n  {\n    component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Sidebar\\\\SidebarNavItem.vue\";\n  }\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\nfunction __vue_create_injector__$h() {\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var styles = __vue_create_injector__$h.styles || (__vue_create_injector__$h.styles = {});\n  var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase());\n\n  return function addStyle(id, css) {\n    if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return; // SSR styles are present.\n\n    var group = isOldIE ? css.media || 'default' : id;\n    var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });\n\n    if (!style.ids.includes(id)) {\n      var code = css.source;\n      var index = style.ids.length;\n\n      style.ids.push(id);\n\n      if (isOldIE) {\n        style.element = style.element || document.querySelector('style[data-group=' + group + ']');\n      }\n\n      if (!style.element) {\n        var el = style.element = document.createElement('style');\n        el.type = 'text/css';\n\n        if (css.media) el.setAttribute('media', css.media);\n        if (isOldIE) {\n          el.setAttribute('data-group', group);\n          el.setAttribute('data-next-index', '0');\n        }\n\n        head.appendChild(el);\n      }\n\n      if (isOldIE) {\n        index = parseInt(style.element.getAttribute('data-next-index'));\n        style.element.setAttribute('data-next-index', index + 1);\n      }\n\n      if (style.element.styleSheet) {\n        style.parts.push(code);\n        style.element.styleSheet.cssText = style.parts.filter(Boolean).join('\\n');\n      } else {\n        var textNode = document.createTextNode(code);\n        var nodes = style.element.childNodes;\n        if (nodes[index]) style.element.removeChild(nodes[index]);\n        if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);\n      }\n    }\n  };\n}\n/* style inject SSR */\n\nvar SidebarNavItem = __vue_normalize__$h(__vue_template__$h, __vue_inject_styles__$h, typeof __vue_script__$h === 'undefined' ? {} : __vue_script__$h, __vue_scope_id__$h, __vue_is_functional_template__$h, __vue_module_identifier__$h, typeof __vue_create_injector__$h !== 'undefined' ? __vue_create_injector__$h : function () {}, typeof __vue_create_injector_ssr__ !== 'undefined' ? __vue_create_injector_ssr__ : function () {});\n\nvar script$i = {\n  name: 'sidebar-nav-label',\n  components: {\n    SidebarNavItem: SidebarNavItem,\n    SidebarNavLink: SidebarNavLink\n  },\n  props: {\n    name: {\n      type: String,\n      default: ''\n    },\n    url: {\n      type: String,\n      default: '#'\n    },\n    icon: {\n      type: String,\n      default: 'fa fa-circle'\n    },\n    classes: {\n      type: String,\n      default: ''\n    },\n    label: {\n      type: Object,\n      required: true,\n      default: function _default() {}\n    }\n  },\n  computed: {\n    classList: function classList() {\n      var classes = {\n        navItem: ['hidden-cn'].concat(_toConsumableArray(this.getClasses(this.classes))).join(' '),\n        navLink: 'nav-label',\n        icon: [this.icon ? this.icon : 'fa fa-circle', this.label.variant ? 'text-' + this.label.variant : '', this.label.class ? this.label.class : ''].join(' ')\n      };\n      return classes;\n    }\n  },\n  methods: {\n    getClasses: function getClasses(classes) {\n      return classes ? classes.split(' ') : [];\n    }\n  }\n};\n\nvar __vue_script__$i = script$i;\n\n/* template */\nvar __vue_render__$i = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"SidebarNavItem\", { attrs: { classes: _vm.classList.navItem } }, [_c(\"a\", { class: _vm.classList.navLink, attrs: { href: _vm.url } }, [_c(\"i\", { class: _vm.classList.icon }), _vm._v(\" \" + _vm._s(_vm.name))])]);\n};\nvar __vue_staticRenderFns__$i = [];\n__vue_render__$i._withStripped = true;\n\nvar __vue_template__$i = typeof __vue_render__$i !== 'undefined' ? { render: __vue_render__$i, staticRenderFns: __vue_staticRenderFns__$i } : {};\n/* style */\nvar __vue_inject_styles__$i = undefined;\n/* scoped */\nvar __vue_scope_id__$i = undefined;\n/* module identifier */\nvar __vue_module_identifier__$i = undefined;\n/* functional template */\nvar __vue_is_functional_template__$i = false;\n/* component normalizer */\nfunction __vue_normalize__$i(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = script || {};\n\n  {\n    component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Sidebar\\\\SidebarNavLabel.vue\";\n  }\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\nfunction __vue_create_injector__$i() {\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var styles = __vue_create_injector__$i.styles || (__vue_create_injector__$i.styles = {});\n  var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase());\n\n  return function addStyle(id, css) {\n    if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return; // SSR styles are present.\n\n    var group = isOldIE ? css.media || 'default' : id;\n    var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });\n\n    if (!style.ids.includes(id)) {\n      var code = css.source;\n      var index = style.ids.length;\n\n      style.ids.push(id);\n\n      if (isOldIE) {\n        style.element = style.element || document.querySelector('style[data-group=' + group + ']');\n      }\n\n      if (!style.element) {\n        var el = style.element = document.createElement('style');\n        el.type = 'text/css';\n\n        if (css.media) el.setAttribute('media', css.media);\n        if (isOldIE) {\n          el.setAttribute('data-group', group);\n          el.setAttribute('data-next-index', '0');\n        }\n\n        head.appendChild(el);\n      }\n\n      if (isOldIE) {\n        index = parseInt(style.element.getAttribute('data-next-index'));\n        style.element.setAttribute('data-next-index', index + 1);\n      }\n\n      if (style.element.styleSheet) {\n        style.parts.push(code);\n        style.element.styleSheet.cssText = style.parts.filter(Boolean).join('\\n');\n      } else {\n        var textNode = document.createTextNode(code);\n        var nodes = style.element.childNodes;\n        if (nodes[index]) style.element.removeChild(nodes[index]);\n        if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);\n      }\n    }\n  };\n}\n/* style inject SSR */\n\nvar SidebarNavLabel = __vue_normalize__$i(__vue_template__$i, __vue_inject_styles__$i, typeof __vue_script__$i === 'undefined' ? {} : __vue_script__$i, __vue_scope_id__$i, __vue_is_functional_template__$i, __vue_module_identifier__$i, typeof __vue_create_injector__$i !== 'undefined' ? __vue_create_injector__$i : function () {}, typeof __vue_create_injector_ssr__ !== 'undefined' ? __vue_create_injector_ssr__ : function () {});\n\nvar script$j = {\n  name: 'SidebarNav',\n  props: {\n    navItems: {\n      type: Array,\n      required: true,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  components: {\n    SidebarNavDivider: SidebarNavDivider,\n    SidebarNavDropdown: SidebarNavDropdown,\n    SidebarNavLink: SidebarNavLink,\n    SidebarNavTitle: SidebarNavTitle,\n    SidebarNavItem: SidebarNavItem,\n    SidebarNavLabel: SidebarNavLabel,\n    VuePerfectScrollbar: vue_perfect_scrollbar__WEBPACK_IMPORTED_MODULE_0___default.a\n  },\n  data: function data() {\n    return {\n      psSettings: {\n        maxScrollbarLength: 200,\n        minScrollbarLength: 20,\n        suppressScrollX: true,\n        wheelPropagation: false,\n        interceptRailY: function interceptRailY(styles) {\n          return _extends$1({}, styles, { height: 0 });\n        }\n      }\n    };\n  },\n\n  methods: {\n    scrollHandle: function scrollHandle(evt) {\n      // console.log(evt)\n    }\n  }\n};\n\nvar __vue_script__$j = script$j;\n\n/* template */\nvar __vue_render__$j = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"nav\", { staticClass: \"sidebar-nav\" }, [_c(\"VuePerfectScrollbar\", {\n    staticClass: \"scroll-area\",\n    attrs: { settings: _vm.psSettings },\n    on: { \"ps-scroll-y\": _vm.scrollHandle }\n  }, [_c(\"ul\", { staticClass: \"nav\" }, [_vm._l(_vm.navItems, function (item, index) {\n    return [item.title ? [_c(\"SidebarNavTitle\", {\n      key: index,\n      attrs: {\n        name: item.name,\n        classes: item.class,\n        wrapper: item.wrapper\n      }\n    })] : item.divider ? [_c(\"SidebarNavDivider\", {\n      key: index,\n      attrs: { classes: item.class }\n    })] : item.label ? [_c(\"SidebarNavLabel\", {\n      key: index,\n      attrs: {\n        name: item.name,\n        url: item.url,\n        icon: item.icon,\n        label: item.label,\n        classes: item.class\n      }\n    })] : [item.children ? [_c(\"SidebarNavDropdown\", {\n      key: index,\n      attrs: {\n        name: item.name,\n        url: item.url,\n        icon: item.icon\n      }\n    }, [_vm._l(item.children, function (childL1, index1) {\n      return [childL1.children ? [_c(\"SidebarNavDropdown\", {\n        key: index1,\n        attrs: {\n          name: childL1.name,\n          url: childL1.url,\n          icon: childL1.icon\n        }\n      }, _vm._l(childL1.children, function (childL2, index2) {\n        return _c(\"li\", {\n          key: index2,\n          staticClass: \"nav-item\"\n        }, [_c(\"SidebarNavLink\", {\n          attrs: {\n            name: childL2.name,\n            url: childL2.url,\n            icon: childL2.icon,\n            badge: childL2.badge,\n            variant: item.variant\n          }\n        })], 1);\n      }))] : [_c(\"SidebarNavItem\", {\n        key: index1,\n        attrs: {\n          classes: item.class\n        }\n      }, [_c(\"SidebarNavLink\", {\n        attrs: {\n          name: childL1.name,\n          url: childL1.url,\n          icon: childL1.icon,\n          badge: childL1.badge,\n          variant: item.variant\n        }\n      })], 1)]];\n    })], 2)] : [_c(\"SidebarNavItem\", {\n      key: index,\n      attrs: { classes: item.class }\n    }, [_c(\"SidebarNavLink\", {\n      attrs: {\n        name: item.name,\n        url: item.url,\n        icon: item.icon,\n        badge: item.badge,\n        variant: item.variant\n      }\n    })], 1)]]];\n  })], 2), _vm._v(\" \"), _vm._t(\"default\")], 2)], 1);\n};\nvar __vue_staticRenderFns__$j = [];\n__vue_render__$j._withStripped = true;\n\nvar __vue_template__$j = typeof __vue_render__$j !== 'undefined' ? { render: __vue_render__$j, staticRenderFns: __vue_staticRenderFns__$j } : {};\n/* style */\nvar __vue_inject_styles__$j = function (inject) {\n  if (!inject) return;\n  inject(\"data-v-1f31d55d_0\", { source: \"\\n.scroll-area[data-v-1f31d55d] {\\n  position: relative;\\n  height: 100%;\\n  margin: auto;\\n}\\n\", map: undefined, media: undefined });\n};\n/* scoped */\nvar __vue_scope_id__$j = \"data-v-1f31d55d\";\n/* module identifier */\nvar __vue_module_identifier__$j = undefined;\n/* functional template */\nvar __vue_is_functional_template__$j = false;\n/* component normalizer */\nfunction __vue_normalize__$j(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = script || {};\n\n  {\n    component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Sidebar\\\\SidebarNav.vue\";\n  }\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  {\n    var hook = void 0;\n    if (style) {\n      hook = function hook(context) {\n        style.call(this, createInjector(context));\n      };\n    }\n\n    if (hook !== undefined) {\n      if (component.functional) {\n        // register for functional component in vue file\n        var originalRender = component.render;\n        component.render = function renderWithStyleInjection(h, context) {\n          hook.call(context);\n          return originalRender(h, context);\n        };\n      } else {\n        // inject component registration as beforeCreate hook\n        var existing = component.beforeCreate;\n        component.beforeCreate = existing ? [].concat(existing, hook) : [hook];\n      }\n    }\n  }\n\n  return component;\n}\n/* style inject */\nfunction __vue_create_injector__$j() {\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var styles = __vue_create_injector__$j.styles || (__vue_create_injector__$j.styles = {});\n  var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase());\n\n  return function addStyle(id, css) {\n    if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return; // SSR styles are present.\n\n    var group = isOldIE ? css.media || 'default' : id;\n    var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });\n\n    if (!style.ids.includes(id)) {\n      var code = css.source;\n      var index = style.ids.length;\n\n      style.ids.push(id);\n\n      if (isOldIE) {\n        style.element = style.element || document.querySelector('style[data-group=' + group + ']');\n      }\n\n      if (!style.element) {\n        var el = style.element = document.createElement('style');\n        el.type = 'text/css';\n\n        if (css.media) el.setAttribute('media', css.media);\n        if (isOldIE) {\n          el.setAttribute('data-group', group);\n          el.setAttribute('data-next-index', '0');\n        }\n\n        head.appendChild(el);\n      }\n\n      if (isOldIE) {\n        index = parseInt(style.element.getAttribute('data-next-index'));\n        style.element.setAttribute('data-next-index', index + 1);\n      }\n\n      if (style.element.styleSheet) {\n        style.parts.push(code);\n        style.element.styleSheet.cssText = style.parts.filter(Boolean).join('\\n');\n      } else {\n        var textNode = document.createTextNode(code);\n        var nodes = style.element.childNodes;\n        if (nodes[index]) style.element.removeChild(nodes[index]);\n        if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);\n      }\n    }\n  };\n}\n/* style inject SSR */\n\nvar SidebarNav = __vue_normalize__$j(__vue_template__$j, __vue_inject_styles__$j, typeof __vue_script__$j === 'undefined' ? {} : __vue_script__$j, __vue_scope_id__$j, __vue_is_functional_template__$j, __vue_module_identifier__$j, typeof __vue_create_injector__$j !== 'undefined' ? __vue_create_injector__$j : function () {}, typeof __vue_create_injector_ssr__ !== 'undefined' ? __vue_create_injector_ssr__ : function () {});\n\n//\n\nvar script$k = {\n  name: 'SidebarToggler',\n  props: {\n    mobile: {\n      type: Boolean,\n      default: false\n    },\n    display: {\n      type: String,\n      default: 'lg'\n    }\n  },\n  computed: {\n    classList: function classList() {\n      return ['navbar-toggler'\n      // 'd-none',\n      // 'd-lg-inline-block'\n      ];\n    }\n  },\n  mounted: function mounted() {\n    this.toggle();\n  },\n  methods: {\n    toggle: function toggle() {\n      var _ref = [this.display, this.mobile],\n          display = _ref[0],\n          mobile = _ref[1];\n\n      var cssClass = sidebarCssClasses[0];\n      if (!mobile && display && checkBreakpoint(display, validBreakpoints)) {\n        cssClass = 'sidebar-' + display + '-show';\n      }\n      toggleClasses(cssClass, sidebarCssClasses);\n    },\n    sidebarToggle: function sidebarToggle(e) {\n      e.preventDefault();\n      this.toggle();\n    }\n  }\n};\n\nvar __vue_script__$k = script$k;\n\n/* template */\nvar __vue_render__$k = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"button\", {\n    class: _vm.classList,\n    attrs: { display: _vm.display, mobile: _vm.mobile, type: \"button\" },\n    on: { click: _vm.sidebarToggle }\n  }, [_c(\"span\", { staticClass: \"navbar-toggler-icon\" })]);\n};\nvar __vue_staticRenderFns__$k = [];\n__vue_render__$k._withStripped = true;\n\nvar __vue_template__$k = typeof __vue_render__$k !== 'undefined' ? { render: __vue_render__$k, staticRenderFns: __vue_staticRenderFns__$k } : {};\n/* style */\nvar __vue_inject_styles__$k = undefined;\n/* scoped */\nvar __vue_scope_id__$k = undefined;\n/* module identifier */\nvar __vue_module_identifier__$k = undefined;\n/* functional template */\nvar __vue_is_functional_template__$k = false;\n/* component normalizer */\nfunction __vue_normalize__$k(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = script || {};\n\n  {\n    component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Sidebar\\\\SidebarToggler.vue\";\n  }\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\nfunction __vue_create_injector__$k() {\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var styles = __vue_create_injector__$k.styles || (__vue_create_injector__$k.styles = {});\n  var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase());\n\n  return function addStyle(id, css) {\n    if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return; // SSR styles are present.\n\n    var group = isOldIE ? css.media || 'default' : id;\n    var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });\n\n    if (!style.ids.includes(id)) {\n      var code = css.source;\n      var index = style.ids.length;\n\n      style.ids.push(id);\n\n      if (isOldIE) {\n        style.element = style.element || document.querySelector('style[data-group=' + group + ']');\n      }\n\n      if (!style.element) {\n        var el = style.element = document.createElement('style');\n        el.type = 'text/css';\n\n        if (css.media) el.setAttribute('media', css.media);\n        if (isOldIE) {\n          el.setAttribute('data-group', group);\n          el.setAttribute('data-next-index', '0');\n        }\n\n        head.appendChild(el);\n      }\n\n      if (isOldIE) {\n        index = parseInt(style.element.getAttribute('data-next-index'));\n        style.element.setAttribute('data-next-index', index + 1);\n      }\n\n      if (style.element.styleSheet) {\n        style.parts.push(code);\n        style.element.styleSheet.cssText = style.parts.filter(Boolean).join('\\n');\n      } else {\n        var textNode = document.createTextNode(code);\n        var nodes = style.element.childNodes;\n        if (nodes[index]) style.element.removeChild(nodes[index]);\n        if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);\n      }\n    }\n  };\n}\n/* style inject SSR */\n\nvar SidebarToggler = __vue_normalize__$k(__vue_template__$k, __vue_inject_styles__$k, typeof __vue_script__$k === 'undefined' ? {} : __vue_script__$k, __vue_scope_id__$k, __vue_is_functional_template__$k, __vue_module_identifier__$k, typeof __vue_create_injector__$k !== 'undefined' ? __vue_create_injector__$k : function () {}, typeof __vue_create_injector_ssr__ !== 'undefined' ? __vue_create_injector_ssr__ : function () {});\n\nvar LibraryModule = {\n  Aside: Aside,\n  AsideToggler: AsideToggler,\n  Breadcrumb: Breadcrumb,\n  Callout: Callout,\n  Footer: Footer,\n  Header: Header,\n  HeaderDropdown: HeaderDropdown,\n  Sidebar: Sidebar,\n  SidebarFooter: SidebarFooter,\n  SidebarForm: SidebarForm,\n  SidebarHeader: SidebarHeader,\n  SidebarMinimizer: SidebarMinimizer,\n  SidebarNav: SidebarNav,\n  SidebarNavDivider: SidebarNavDivider,\n  SidebarNavDropdown: SidebarNavDropdown,\n  SidebarNavItem: SidebarNavItem,\n  SidebarNavLabel: SidebarNavLabel,\n  SidebarNavLink: SidebarNavLink,\n  SidebarNavTitle: SidebarNavTitle,\n  SidebarToggler: SidebarToggler,\n  Switch: Switch,\n\n  install: function install(Vue) {\n    // Register components with vue\n    Vue.component(\"Aside\", Aside);\n    Vue.component(\"AsideToggler\", AsideToggler);\n    Vue.component(\"Breadcrumb\", Breadcrumb);\n    Vue.component(\"Callout\", Callout);\n    Vue.component(\"Footer\", Footer);\n    Vue.component(\"Header\", Header);\n    Vue.component(\"HeaderDropdown\", HeaderDropdown);\n    Vue.component(\"Sidebar\", Sidebar);\n    Vue.component(\"SidebarFooter\", SidebarFooter);\n    Vue.component(\"SidebarForm\", SidebarForm);\n    Vue.component(\"SidebarHeader\", SidebarHeader);\n    Vue.component(\"SidebarMinimizer\", SidebarMinimizer);\n    Vue.component(\"SidebarNav\", SidebarNav);\n    Vue.component(\"SidebarNavDivider\", SidebarNavDivider);\n    Vue.component(\"SidebarNavDropdown\", SidebarNavDropdown);\n    Vue.component(\"SidebarNavItem\", SidebarNavItem);\n    Vue.component(\"SidebarNavLabel\", SidebarNavLabel);\n    Vue.component(\"SidebarNavLink\", SidebarNavLink);\n    Vue.component(\"SidebarNavTitle\", SidebarNavTitle);\n    Vue.component(\"SidebarToggler\", SidebarToggler);\n    Vue.component(\"Switch\", Switch);\n  }\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (LibraryModule);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../node_modules/@coreui/vue/dist/coreui-vue.esm.js\n");

/***/ }),

/***/ "../node_modules/@coreui/vue/src/shared/classes.js":
/*!*********************************************************!*\
  !*** ../node_modules/@coreui/vue/src/shared/classes.js ***!
  \*********************************************************/
/*! exports provided: sidebarCssClasses, asideMenuCssClasses, validBreakpoints, checkBreakpoint */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sidebarCssClasses\", function() { return sidebarCssClasses; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"asideMenuCssClasses\", function() { return asideMenuCssClasses; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"validBreakpoints\", function() { return validBreakpoints; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkBreakpoint\", function() { return checkBreakpoint; });\nconst sidebarCssClasses = [\n  'sidebar-show',\n  'sidebar-sm-show',\n  'sidebar-md-show',\n  'sidebar-lg-show',\n  'sidebar-xl-show'\n]\n\nconst asideMenuCssClasses = [\n  'aside-menu-show',\n  'aside-menu-sm-show',\n  'aside-menu-md-show',\n  'aside-menu-lg-show',\n  'aside-menu-xl-show'\n]\n\nconst validBreakpoints = [ 'sm', 'md', 'lg', 'xl' ]\n\nfunction checkBreakpoint (breakpoint, list) {\n  return list.indexOf(breakpoint) > -1\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL0Bjb3JldWkvdnVlL3NyYy9zaGFyZWQvY2xhc3Nlcy5qcz80ZDA0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFTzs7QUFFQTtBQUNQO0FBQ0EiLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL0Bjb3JldWkvdnVlL3NyYy9zaGFyZWQvY2xhc3Nlcy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBzaWRlYmFyQ3NzQ2xhc3NlcyA9IFtcbiAgJ3NpZGViYXItc2hvdycsXG4gICdzaWRlYmFyLXNtLXNob3cnLFxuICAnc2lkZWJhci1tZC1zaG93JyxcbiAgJ3NpZGViYXItbGctc2hvdycsXG4gICdzaWRlYmFyLXhsLXNob3cnXG5dXG5cbmV4cG9ydCBjb25zdCBhc2lkZU1lbnVDc3NDbGFzc2VzID0gW1xuICAnYXNpZGUtbWVudS1zaG93JyxcbiAgJ2FzaWRlLW1lbnUtc20tc2hvdycsXG4gICdhc2lkZS1tZW51LW1kLXNob3cnLFxuICAnYXNpZGUtbWVudS1sZy1zaG93JyxcbiAgJ2FzaWRlLW1lbnUteGwtc2hvdydcbl1cblxuZXhwb3J0IGNvbnN0IHZhbGlkQnJlYWtwb2ludHMgPSBbICdzbScsICdtZCcsICdsZycsICd4bCcgXVxuXG5leHBvcnQgZnVuY3Rpb24gY2hlY2tCcmVha3BvaW50IChicmVha3BvaW50LCBsaXN0KSB7XG4gIHJldHVybiBsaXN0LmluZGV4T2YoYnJlYWtwb2ludCkgPiAtMVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/@coreui/vue/src/shared/classes.js\n");

/***/ })

}]);